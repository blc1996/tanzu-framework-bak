// Code generated by go-bindata. DO NOT EDIT.
// sources:
// pkg/v1/tkg/manifest/telemetry/config-aws.yaml
// pkg/v1/tkg/manifest/telemetry/config-azure.yaml
// pkg/v1/tkg/manifest/telemetry/config-vsphere.yaml
// pkg/v1/tkg/manifest/telemetry/zz_generated.bindata.go

package telemetry

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataPkgV1TkgManifestTelemetryConfigawsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x6d\x6b\xdb\x4c\x10\xfc\xae\x5f\xb1\x18\x42\x20\x3c\xf2\x0b\x0f\x84\x22\xc8\x87\x36\x85\x86\x50\x92\xe0\x84\xd2\x52\x4a\x59\x9d\x36\xf6\xc5\xa7\x3b\x71\xbb\xa7\xd4\xfd\xf5\xe5\x64\x29\xf8\x45\x8e\x9d\x42\x2f\x9f\x72\x3b\x37\x33\xbb\x9a\x75\x9a\xa6\x09\x56\xfa\x0b\x79\xd6\xce\x66\x50\x4f\x92\x85\xb6\x45\x06\x37\x58\x12\x57\xa8\x28\x29\x49\xb0\x40\xc1\x2c\x01\xb0\x58\x52\x06\xb2\x98\xa5\xbc\x64\xa1\x32\x15\x32\x54\x92\xf8\x65\x02\x90\xec\x25\xbb\x27\x5f\x6b\x45\xef\x95\x72\xc1\xca\x1e\xc6\x17\xaa\x94\xb1\x2d\x34\x06\xf6\xe8\x35\x6a\x2b\xfa\x4b\x13\x58\xc8\x4f\x9d\xa1\x0d\x7d\x9f\xa3\x1a\x62\x90\xb9\xf3\xfa\x37\x8a\x76\x76\xb8\x78\xc7\x43\xed\x46\xf5\xe4\xa0\x09\xb5\x22\x4d\x7d\x64\xf5\xc1\x10\x47\x64\x0a\x58\xe9\x4f\xde\x85\x8a\x33\xf8\x3e\x18\xfc\x48\x00\x00\x3c\xb1\x0b\x5e\x51\x73\xc7\xa4\x3c\x09\x0f\xfe\x83\xc1\x4b\x0f\xdc\x02\x6b\xf2\x79\x03\x9a\x91\x44\x80\xd1\x2c\x4d\x69\x8b\xb7\x15\x1f\xfe\x4a\x57\x86\xfb\x74\x5a\x4c\x23\x54\xa2\x9a\x6b\x4b\x05\x55\xc6\x2d\x4b\xb2\xf2\x56\x41\x6d\x1f\x3d\xb2\xf8\xa0\x24\x78\x1a\x1e\xa3\x8f\xcf\xbc\x6e\x01\x9f\xb9\x75\x21\x54\x56\x06\xe5\xed\x4d\x3b\x2b\xde\x99\xca\xa0\x3d\xce\xc1\x22\xe4\x84\x45\xb9\xfe\xee\x80\x66\x7f\x68\x3e\x68\x5b\x68\x3b\xfb\x37\xd9\x49\xf3\x96\x9d\x43\xfe\x44\x4a\xda\x18\xf5\x2e\x46\x74\xbe\x77\x21\x0e\xaf\x44\x94\x9b\xd2\x63\x14\xe8\x06\xfb\x4a\x23\x09\xc0\xee\xfa\x1c\xb1\x0b\x3b\x6b\x9e\xa3\xa8\xf9\xa8\x9e\xe4\x24\xd8\x6d\xfc\xa5\x77\xf6\xda\xe5\x87\x26\x75\xc4\x9e\x03\x18\xcc\xc9\x34\x63\x03\xd8\x8e\xc5\xa8\xb3\xb6\x22\x3f\x3d\xe1\xd3\x84\x2b\x52\x11\xcd\x6a\x4e\x45\x30\x94\xc1\x60\x0c\x67\xa3\x73\x38\x8b\x7f\x83\x04\x40\x39\xab\x82\xf7\x64\xd5\xf2\xce\x19\xad\x96\x19\x4c\xa9\x32\xf1\xd7\x0e\xe0\x11\xb5\xa1\xe2\xda\xe5\x7c\xa5\x59\x9c\x5f\x7e\xd6\xa5\x96\x0c\x26\xe3\x04\xe0\xc9\xe5\x0f\x6d\xbc\x57\x86\x3a\xb1\x78\x64\xa3\xb2\x5d\x6d\xfe\xdf\xf8\xde\x7b\x3e\xf3\xea\xa0\x12\x5d\xd3\x47\xc2\xc2\x68\x4b\xf7\xa4\x9c\x2d\x38\x83\xff\xcf\xc7\xe3\x35\x54\xcc\x3e\x6a\x4b\x9e\xd7\x65\x62\xc0\xfa\xa7\xbd\x7e\x74\x89\xb3\x6e\x66\x9b\x15\xe5\xca\x12\x6d\x91\x6d\x5d\x47\xda\xd1\x6b\x8c\x11\x90\xa6\xec\xac\xcb\x83\x5b\xc6\xe4\xa7\x15\xca\xfc\x62\xd4\x5d\xf5\xe2\x63\x3e\xe2\xa0\x29\x0d\xde\x5c\x9c\x70\x2f\x68\x15\x82\xdd\x2a\xd9\x7a\xdb\x66\xd7\xfb\xd5\xc3\xc3\xdd\xcf\xbb\xe9\xed\xd7\x6f\x3b\x8c\x35\x9a\xd0\xdf\xfa\xfa\xe3\xfb\xbf\x7e\x7d\x73\xfb\xa6\xa7\x9e\x58\xd0\x4b\x97\xc5\x1b\xaa\xc9\x27\x7f\x02\x00\x00\xff\xff\xf6\x15\x3d\x26\x9b\x07\x00\x00")

func bindataPkgV1TkgManifestTelemetryConfigawsYamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPkgV1TkgManifestTelemetryConfigawsYaml,
		"pkg/v1/tkg/manifest/telemetry/config-aws.yaml",
	)
}

func bindataPkgV1TkgManifestTelemetryConfigawsYaml() (*asset, error) {
	bytes, err := bindataPkgV1TkgManifestTelemetryConfigawsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "pkg/v1/tkg/manifest/telemetry/config-aws.yaml",
		size:        1947,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPkgV1TkgManifestTelemetryConfigazureYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5d\x6b\x1b\x3b\x10\x7d\xdf\x5f\x31\x18\x42\x20\x44\xfe\xe0\x42\xb8\x2c\xe4\xe1\xde\x14\x1a\x42\x49\x82\x13\x4a\x4b\x29\x65\x56\x3b\xb1\x15\x6b\xa5\x45\x1a\x2d\x75\x7e\x7d\xd1\x7e\x84\xb5\xbd\x8e\x9d\x42\xe4\x27\x6b\x8e\xce\x39\x9a\x3d\x23\x21\x44\x82\xa5\xfa\x4a\xce\x2b\x6b\x52\xa8\x66\xc9\x4a\x99\x3c\x85\x5b\x2c\xc8\x97\x28\x29\x29\x88\x31\x47\xc6\x34\x01\x30\x58\x50\x0a\xbc\x5a\x08\xbf\xf6\x4c\x85\x60\xd2\x54\x10\xbb\x75\x92\xec\xa5\x7a\x20\x57\x29\x49\xff\x49\x69\x83\xe1\x3d\x7c\xaf\x44\xc2\x63\x5b\xa8\xe5\xdf\x52\x6b\xe8\xaf\x74\xf0\x4c\x6e\x6e\x35\x6d\xe8\xbb\x0c\xe5\x18\x03\x2f\xad\x53\x2f\xc8\xca\x9a\xf1\xea\x5f\x3f\x56\x76\x52\xcd\x0e\x9a\x90\x0d\xa9\x70\x91\xd5\x05\x4d\x3e\x22\x05\x60\xa9\x3e\x3b\x1b\x4a\x9f\xc2\x8f\xd1\xe8\x67\x02\x00\xe0\xc8\xdb\xe0\x24\xd5\x7b\x9e\xa4\x23\xf6\xa3\x73\x18\xbd\xde\xc1\xb7\xc0\x8a\x5c\x56\x83\x16\xc4\x11\xa0\x95\xe7\xba\xb4\xc5\xdb\x8a\x8f\x7f\x8b\xc6\xf0\x90\x4e\x8b\xf9\x50\xea\x73\x18\x15\x28\x97\xca\x50\x4e\xa5\xb6\xeb\x82\x0c\xbf\x57\x50\x99\x27\x87\x9e\x5d\x90\x1c\x1c\x8d\x8f\xd1\xc7\x97\xe0\xa8\x15\xae\x4d\xd4\x1b\x7d\x57\x7d\x04\x53\x51\x6a\xe4\xf7\x37\xd9\x1a\x76\x56\x97\x1a\xcd\x71\xb6\x56\x21\x23\xcc\x8b\xfe\xb9\x03\x9a\xc3\x21\xfd\x5f\x99\x5c\x99\xc5\xc7\x64\x55\x64\x2d\xbb\x0f\xd9\x33\x49\x6e\x63\x3b\x38\x88\xd1\xf9\xde\x01\x3c\x3c\x82\x51\x6e\x4e\x4f\x51\xa0\x6b\xec\x1b\x17\x49\x00\x76\xc7\xf5\x88\xd9\xdb\x79\x56\x32\x64\xb9\x9c\x54\xb3\x8c\x18\xbb\x17\xe6\xca\x59\x73\x63\xb3\x43\x9d\x3a\xe2\x5d\x01\xd0\x98\x91\xae\xdb\x06\xb0\x1d\x8b\x49\x67\xad\x21\x3f\x3d\xf1\xa7\x89\x2f\x49\x46\xb4\x97\x4b\xca\x83\xa6\x14\x46\x53\x38\x9b\x5c\xc0\x59\xfc\x8d\x12\x00\x69\x8d\x0c\xce\x91\x91\xeb\x7b\xab\x95\x5c\xa7\x30\xa7\x52\xc7\xb7\x15\xe0\x09\x95\xa6\xfc\xc6\x66\xfe\x5a\x79\xb6\x6e\xfd\x45\x15\x8a\x53\x98\x4d\x13\x80\x67\x9b\x3d\xb6\xf1\x6e\x0c\x75\x62\x71\xf1\x46\x65\xbb\x5a\xff\xdf\xf8\xde\x7b\x3e\x73\xb3\x50\xb2\xaa\xe8\x13\x61\xae\x95\xa1\x07\x92\xd6\xe4\x3e\x85\x7f\x2e\xa6\xd3\x1e\x2a\x66\x1f\x95\x21\xe7\xfb\x32\x31\x60\xc3\xdd\xee\x2f\x55\xe0\xa2\xeb\xd9\x66\x45\xda\xa2\x40\x93\xa7\x5b\xdb\x91\x76\xf2\x16\x63\x04\x08\xe1\xad\xb1\x59\xb0\xeb\x98\x7c\x51\x22\x2f\x2f\x27\xdd\xd6\x20\x3e\xe6\x23\x36\x9a\x44\x70\xfa\xf2\xc4\x0f\x82\x9a\x10\xec\x56\xc9\x54\xdb\x36\xbb\xbb\x5f\x3f\x3e\xde\xff\xba\x9f\xdf\x7d\xfb\xbe\xc3\x58\xa1\x0e\xc3\x57\xef\x1f\x7e\xf8\xeb\xd3\xb7\x77\xef\x3a\xea\xc8\x33\x3a\xee\xb2\x78\x4b\x15\xb9\xe4\x4f\x00\x00\x00\xff\xff\x7e\xaf\x00\xd5\x09\x08\x00\x00")

func bindataPkgV1TkgManifestTelemetryConfigazureYamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPkgV1TkgManifestTelemetryConfigazureYaml,
		"pkg/v1/tkg/manifest/telemetry/config-azure.yaml",
	)
}

func bindataPkgV1TkgManifestTelemetryConfigazureYaml() (*asset, error) {
	bytes, err := bindataPkgV1TkgManifestTelemetryConfigazureYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "pkg/v1/tkg/manifest/telemetry/config-azure.yaml",
		size:        2057,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPkgV1TkgManifestTelemetryConfigvsphereYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5b\x6b\x1b\x3d\x10\x7d\xdf\x5f\x31\x18\x42\x20\x44\xbe\xf0\x41\xf8\x58\xc8\x43\x9b\x42\x43\x28\x49\x70\x42\x69\x29\xa5\xcc\x6a\x27\xb6\x62\xad\xb4\x48\xa3\xa5\xdb\x5f\x5f\xb4\x97\xe0\xcb\x3a\x76\x0a\x91\x9f\xac\x39\x3a\xe7\x68\xf6\x8c\x84\x10\x09\x96\xea\x2b\x39\xaf\xac\x49\xa1\x9a\x25\x2b\x65\xf2\x14\x6e\xb1\x20\x5f\xa2\xa4\xa4\x20\xc6\x1c\x19\xd3\x04\xc0\x60\x41\x29\xf0\x6a\x21\x7c\xed\x99\x0a\xc1\xa4\xa9\x20\x76\x75\x92\xec\xa5\x7a\x20\x57\x29\x49\x1f\xa4\xb4\xc1\xf0\x1e\xbe\x17\x22\xe1\xb1\x2b\x34\xf2\xaf\xa9\xb5\xf4\x57\x3a\x78\x26\x37\xb7\x9a\x36\xf4\x5d\x86\x72\x8c\x81\x97\xd6\xa9\x3f\xc8\xca\x9a\xf1\xea\x7f\x3f\x56\x76\x52\xcd\x0e\x9a\x90\x2d\xa9\x70\x91\xd5\x05\x4d\x3e\x22\x05\x60\xa9\x3e\x3b\x1b\x4a\x9f\xc2\x8f\xd1\xe8\x67\x02\x00\xe0\xc8\xdb\xe0\x24\x35\x7b\x9e\xa4\x23\xf6\xa3\x73\x18\xbd\xdc\xc1\x77\xc0\x8a\x5c\xd6\x80\x16\xc4\x11\xa0\x95\xe7\xa6\xb4\xc5\xdb\x89\x8f\x7f\x8b\xd6\xf0\x90\x4e\x87\x79\x57\xea\x73\x18\x15\x28\x97\xca\x50\x4e\xa5\xb6\x75\x41\x86\xdf\x2a\xa8\xcc\x93\x43\xcf\x2e\x48\x0e\x8e\xc6\xc7\xe8\x57\xbe\x5c\x92\xa3\x4e\xba\xb1\xd1\x6d\xad\x3b\xdb\x44\x31\x15\xa5\x46\x7e\x7b\xab\xad\x61\x67\x75\xa9\xd1\x1c\x67\x6e\x15\x32\xc2\xbc\x58\x3f\x77\x40\x73\x38\xaa\x1f\x95\xc9\x95\x59\xbc\x4f\x62\x45\xd6\xb1\xfb\x90\x3d\x93\xe4\x2e\xbc\x83\xe3\x18\x9d\xef\x1d\xc3\xc3\x83\x18\xe5\xe6\xf4\x14\x05\xfa\xc6\xbe\x72\x91\x04\x60\x77\x68\x8f\x98\xc0\x9d\xc7\x25\x43\x96\xcb\x49\x35\xcb\x88\xb1\x7f\x67\xae\x9c\x35\x37\x36\x3b\xd4\xa9\x23\x5e\x17\x00\x8d\x19\xe9\xa6\x6d\x00\xdb\xb1\x98\xf4\xd6\x5a\xf2\xd3\x13\x7f\x9a\xf8\x92\x64\x44\x7b\xb9\xa4\x3c\x68\x4a\x61\x34\x85\xb3\xc9\x05\x9c\xc5\xdf\x28\x01\x90\xd6\xc8\xe0\x1c\x19\x59\xdf\x5b\xad\x64\x9d\xc2\x9c\x4a\x1d\x5f\x58\x80\x27\x54\x9a\xf2\x1b\x9b\xf9\x6b\xe5\xd9\xba\xfa\x8b\x2a\x14\xa7\x30\x9b\x26\x00\xcf\x36\x7b\xec\xe2\xdd\x1a\xea\xc5\xe2\xe2\x8d\xca\x76\xb5\xf9\xbf\xf1\xbd\xf7\x7c\xe6\x76\xa1\x64\x55\xd1\x27\xc2\x5c\x2b\x43\x0f\x24\xad\xc9\x7d\x0a\xff\x5d\x4c\xa7\x6b\xa8\x98\x7d\x54\x86\x9c\x5f\x97\x89\x01\x1b\xee\xf6\xfa\x52\x05\x2e\xfa\x9e\x6d\x56\xa4\x2d\x0a\x34\x79\xba\xb5\x1d\x69\x27\xaf\x31\x46\x80\x10\xde\x1a\x9b\x05\x5b\xc7\xe4\x8b\x12\x79\x79\x39\xe9\xb7\x06\xf1\x31\x1f\xb1\xd1\x24\x82\xd3\x97\x27\x7e\x10\xd4\x86\x60\xb7\x4a\xa6\xda\xb6\xd9\xdf\xfd\xfa\xf1\xf1\xfe\xd7\xfd\xfc\xee\xdb\xf7\x1d\xc6\x0a\x75\x18\xbe\xfa\xfa\xe1\x87\x7f\x3e\x7d\x7b\xf7\xa6\xa3\x8e\x3c\xa3\xe3\x3e\x8b\xb7\x54\x91\x4b\xfe\x06\x00\x00\xff\xff\x06\xcb\x68\x3f\x0f\x08\x00\x00")

func bindataPkgV1TkgManifestTelemetryConfigvsphereYamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPkgV1TkgManifestTelemetryConfigvsphereYaml,
		"pkg/v1/tkg/manifest/telemetry/config-vsphere.yaml",
	)
}

func bindataPkgV1TkgManifestTelemetryConfigvsphereYaml() (*asset, error) {
	bytes, err := bindataPkgV1TkgManifestTelemetryConfigvsphereYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "pkg/v1/tkg/manifest/telemetry/config-vsphere.yaml",
		size:        2063,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPkgV1TkgManifestTelemetryZzgeneratedBindataGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x99\x6d\x6f\x1b\xc7\x11\xc7\x5f\xf3\x3e\xc5\x55\x40\x02\xb2\x50\xa4\x7b\x7e\x10\xe0\x37\xb1\x5d\x20\x2f\x92\x14\xad\x5b\xa0\xe8\x16\xc1\xde\xdd\x1e\x73\xb0\x48\xaa\x24\xe5\xac\x14\xf8\xbb\x17\xbf\x9d\x39\x89\x71\x5d\xdb\x72\xd2\x02\x35\x40\x93\xf7\xb0\xb3\xf3\xf0\x9f\x99\xff\xac\x2e\x2f\xe3\xe7\xbb\xc1\xc5\x6b\xb7\x75\x7b\x7b\x74\x43\xdc\xdd\xc5\xeb\xdd\x57\xdd\xb4\x1d\xec\xd1\x5e\xc4\x2f\xbe\x8f\xbf\xfb\xfe\x55\xfc\xf2\xc5\x37\xaf\x2e\xa2\xcb\xcb\xf8\xb0\xbb\xdd\xf7\xee\x70\xc5\xef\x9b\xd7\xeb\xcb\x37\xe9\xe5\xf1\xf5\xfa\x72\x63\xb7\xd3\xe8\x0e\xc7\xcb\xa3\xbb\x76\x1b\x77\xdc\xdf\x5d\xf6\xbb\xed\x38\xad\xbf\xb2\x3f\x1d\x2e\xee\xec\xe6\xfa\xd3\x17\xdc\xdf\xee\xdd\xd3\x96\xbc\x39\xdc\xfc\xe8\x3e\x79\xd1\xfd\xfd\x0f\x0f\xe6\x5e\xcc\x86\xae\x77\x51\x74\x63\xfb\xd7\x76\xed\xe2\x87\x57\xa3\x28\x9a\x36\x37\xbb\xfd\x31\x5e\x46\x8b\xb3\xee\xee\xe8\x0e\x67\xd1\xe2\xac\xdf\x6d\x6e\xf6\xee\x70\xb8\x5c\xdf\x4f\x37\xdc\x18\x37\x47\xbe\xa6\x9d\xfc\x7f\x39\xed\x6e\x8f\xd3\x35\x17\xbb\xb0\xe0\xc6\x1e\x7f\xbc\x1c\xa7\x6b\xc7\x0f\x6e\x1c\x8e\xfb\x69\xbb\x0e\xcf\x8e\xd3\xc6\x9d\x45\xab\x28\x1a\x6f\xb7\x7d\xac\xea\xfc\xc9\xd9\x61\xc9\x8f\xf8\xef\xff\x60\xdb\xf3\x78\x6b\x37\x2e\x96\x65\xab\x78\x39\xdf\x75\xfb\xfd\x6e\xbf\x8a\x7f\x8e\x16\xeb\xfb\x70\x15\x5f\x3d\x8b\xd1\xea\xe2\x3b\xf7\x13\x42\xdc\x7e\x19\xd4\xe6\xfa\xeb\xdb\x71\x74\xfb\x20\x76\xb5\x8a\x16\xd3\x18\x16\xfc\xee\x59\xbc\x9d\xae\x11\xb1\xd8\xbb\xe3\xed\x7e\xcb\xe5\x79\x3c\x6e\x8e\x17\x2f\x91\x3e\x2e\xcf\x10\x14\x7f\xf1\xcf\xab\xf8\x8b\x37\x67\xa2\x49\xd8\x6b\x15\x2d\xde\x46\xd1\xe2\x8d\xdd\xc7\xdd\xed\x18\xcb\x3e\xb2\x49\xb4\xf8\x41\xd4\x79\x16\x4f\xbb\x8b\xe7\xbb\x9b\xbb\xe5\x97\xdd\xed\x78\x1e\xaf\xef\x57\xd1\xa2\xbf\x7e\x39\x6b\x7a\xf1\xfc\x7a\x77\x70\xcb\x55\xf4\x5b\xe9\x83\x18\x91\xff\x1f\x04\xb9\xfd\x5e\xf4\xd6\x9b\xdd\xed\x78\xf1\x35\xaa\x2f\x57\xe7\xbc\x11\xbd\x8d\xa2\xe8\x78\x77\xe3\x62\x7b\x38\xb8\x23\x3e\xbf\xed\x8f\x88\x09\x06\x6a\x40\xa2\xc5\xb4\x1d\x77\x71\x4c\x50\xbf\xd9\x8e\xbb\x97\x9e\x75\x61\xd9\xe3\xad\x78\xda\x1e\xdd\x7e\xb4\xbd\x63\xf9\xee\x70\xf1\x07\x7d\x14\x2d\xbe\x7d\x51\x3e\xff\xd1\xf5\xaf\x0f\xb7\x9b\xe5\x4a\xe3\xfa\x20\x41\x41\x30\xbf\x7d\xa2\x42\x40\x81\xfe\xd3\x45\x8b\xc3\x74\xff\x70\x6f\xda\x1e\xab\x22\x5a\x6c\x48\x69\xfd\xa7\xdb\x7e\xbb\x1b\x5c\x78\xf0\x6a\x52\x11\x00\xef\x82\xab\x68\xb1\x19\xca\x5e\xb5\x39\xd1\x25\x00\x72\x39\x4e\xef\xea\xb3\x8a\xbf\xb3\x1b\xf7\xa0\x36\x7a\xa9\x2f\xc7\xe9\x02\x0d\xa3\xb7\x1f\x58\xfb\xe7\xe9\x9e\xb5\x41\xd3\x5f\x2e\xc5\x90\x0f\x2e\xc5\x86\xe5\xea\xd4\xa2\x5f\x0a\xc0\xec\x8f\x09\xc0\xe0\xe5\xea\xd1\xf8\x7f\x93\x10\x3c\xf2\x41\x21\xef\x09\xdd\x3b\x52\x1e\xdd\xf9\x41\x49\xdf\x1c\x5e\x4c\xfb\xe5\x2a\xee\x76\xbb\xeb\x53\x09\xf6\xfa\xf0\x11\x1f\xde\x1d\xc4\x85\x82\xae\x9f\xdf\x9e\xac\x56\x08\x93\x95\x3f\xe8\xc2\x3f\xbe\x5e\xff\x35\x7d\xf5\x7a\xfd\xad\xd6\xc2\x57\x73\x7d\x7b\x1e\xca\xa7\xfd\xe9\xf0\x37\xbb\xb9\x8e\x9f\x29\xb6\x97\x67\xc6\xa7\xa3\xf1\x4d\x67\x7c\xd2\x18\x9f\x24\xef\xff\x8c\xa3\xf1\x5d\x61\x7c\x59\x18\x5f\x0d\xc6\x57\x9d\xf1\x43\x67\x7c\xd1\x1b\x9f\xf2\xbc\x37\xde\x3a\xe3\x4b\xde\x4b\x8d\x4f\x1b\xe3\x8b\xcc\xf8\x2c\x31\x3e\xef\x8d\x1f\x33\xe3\x13\xf6\x60\xaf\xc2\xf8\x2c\x33\xbe\x6f\x8c\x6f\x6a\xe3\xf3\xca\xf8\xa6\x34\xbe\xa9\x8c\x2f\x13\xe3\xdb\xcc\x78\x97\xc8\x7b\x43\x66\x7c\x99\x19\x5f\x58\xe3\xcb\xd6\xf8\x76\x90\xf7\xc7\xca\xf8\xbe\x34\xde\xb2\xbe\x33\xbe\x4e\x8d\xef\x3a\xb9\x1e\x0a\xe3\xc7\xc1\xf8\xb1\x34\xde\x95\xc6\x57\xec\xd7\x1a\x3f\xa2\x13\xfb\x38\x91\x13\xf4\x1b\x8d\x6f\x47\xe3\xeb\x4c\xe4\xe4\xc8\xcb\x45\x56\x6b\x8d\xaf\x4b\xf9\xb6\x95\xf1\x49\x6b\x7c\xc9\xde\x56\x6c\xa9\x5b\xe3\x07\xf4\x70\xc6\x57\xaa\x7b\x31\x8a\xfe\xd8\xd3\x55\xb2\x5f\x52\x89\xdc\xb2\x31\x3e\xc5\x9e\xda\x78\xdb\x18\x9f\x35\xa2\x57\xd1\x1a\xdf\xb1\x36\x31\xbe\x4f\x8d\xcf\x7a\xe3\x93\x54\xee\xb1\x06\xfb\x91\xd1\x65\xc6\xb7\x8d\xf1\x16\xd9\xbd\xd8\x65\x53\xe3\xf3\xcc\xf8\xb4\x94\x6f\xe2\xc3\xfe\xd8\x5a\xb1\x37\x6b\x12\xe3\x5d\x6f\x7c\x56\x8a\x5d\x59\x2d\x71\x22\x86\xe8\xe7\xd0\xb9\x14\x1f\xb0\x7f\x6f\x8d\x4f\x9d\xf1\x7d\x65\x7c\x8a\xae\xd6\xf8\xb6\x90\xb8\x66\xf8\xbf\x10\x7d\x88\x81\x6b\x8c\xcf\xf1\xb1\x35\x3e\xeb\xc4\x37\x45\x67\x7c\x9a\x8b\xee\xc4\x38\xf8\x64\x10\x5d\x93\xc1\xf8\x7a\x10\x9f\xdb\xdc\xf8\xd4\x1a\x5f\xa9\x8e\x1d\x31\xca\x45\x06\xfe\x6a\xf0\x7f\x25\x9f\xae\x31\xbe\x46\x5e\x6d\x7c\x91\x1b\xef\x88\x5f\xa5\x31\xc6\x0f\x89\xc4\xa7\x2b\x05\x5b\x85\xee\x83\x8f\x78\x07\xbb\xc0\x69\x51\xcb\xbd\xc4\x8a\x7e\xae\x15\xfd\x06\xa7\x18\xb4\x12\x7f\xfc\x97\x3b\xc1\x31\xd8\x2e\x4e\x72\x03\x3c\xe3\x0b\x30\x50\x82\xf9\xd4\xf8\x3a\x17\xdd\x6c\x21\xcf\xd1\x05\xac\x8f\xc8\xcd\x65\xff\x42\xf1\x3f\xf4\x12\x17\xfc\x4f\x5e\x80\xa3\x24\x17\x9c\xb5\xbc\x57\x18\xdf\x24\xc6\x0f\x8a\x05\x6c\xa9\x5a\xc9\xd1\xae\x96\x58\xa7\x2a\x3b\xe4\x45\x2d\xb9\x33\x82\x49\x72\xd4\x4a\x5e\x66\xb9\xe0\xc1\x66\x22\x3b\xc4\x1b\x1d\x4a\xe3\xcb\x52\xe2\x4b\x3c\xb9\x07\xb6\xd0\x05\x7c\x17\xa9\xe4\x38\x7b\xe4\x83\x3e\x6b\xc4\xc7\x59\x21\x71\x48\x15\x23\xc4\xb0\x19\x8d\xef\x47\xc5\xa4\x13\xec\x12\x5f\xe2\x49\xfe\x64\xa9\xe8\x81\x6c\x70\x43\x4e\x86\xf8\x0d\x92\x73\xe0\x06\xff\xb7\xad\x60\x8f\x7d\xd8\x97\xbc\x0a\xf9\x90\x49\x8c\xa9\x07\xe0\x35\xe0\xc4\x19\xef\x9c\xf8\x89\xdc\xab\xc1\xb3\xc6\x8c\xef\xb2\xd3\xeb\x4e\xfc\x02\x9e\x06\xcd\x35\x30\xd6\x56\x5a\x03\x72\xf5\x63\x21\xbe\x1c\xac\xc6\x1c\xbd\x9d\x60\x0c\x9f\x76\xce\xf8\xba\x16\x5b\x12\xec\x1e\x65\x0d\x79\xd1\x76\x52\xa7\x2a\xf0\x5c\x48\x4e\x24\x1a\x0f\x64\x12\x07\xf0\xd0\x27\xa2\x33\xf8\x4e\x4f\x30\x84\x8e\xc4\xa6\x55\x7f\x52\x1b\xc6\x56\xbe\xb9\x87\xed\xf8\x7d\x68\x24\x2e\xa1\xd6\x96\xa2\x0f\x39\x88\xce\xf8\x94\x5a\x9a\x55\xe2\xf3\xbe\x90\xb5\xe0\x0a\x7b\xfa\xde\xf8\xbe\x95\xdc\x45\x4f\xee\x23\x8f\x5a\x18\xea\x68\x63\x7c\x97\x4b\xcd\xc2\xdf\xb9\xc6\xde\xa5\xc6\x0f\xb9\xd6\xec\x4e\x6a\x51\x4a\x8d\x18\x24\xe7\x0b\x27\x31\xc9\x13\xf1\x05\xf1\xaa\xc8\x13\xb0\x50\x8b\x3d\xe4\x46\xde\x08\x7e\x89\x13\xf9\x90\x14\x52\xef\x72\xec\xec\x8c\x6f\xc0\x98\xe6\xe6\x50\x0a\x16\x89\x7f\xca\xf3\x41\xe2\xc5\x6f\x70\x6d\x5b\xa9\x75\x23\xba\xd5\x12\x0f\xfa\x05\x7a\x91\xff\xd4\x19\x97\x3d\xfa\xa5\x56\x7f\x85\xfe\xd1\x4b\xed\xab\x9d\xd4\x6e\xee\x23\x1b\x7d\xf1\x9d\x53\xdd\x90\x87\xbf\x58\x4f\xce\xe2\x77\xf0\x3d\xe7\x5a\x6e\x25\x7e\xe4\x42\xa8\xc3\xb9\xe4\x49\x39\x68\x8c\x90\x3f\x4a\xde\x80\xed\xba\x13\x6c\x82\x3d\xa7\x18\x4f\xf5\x7d\xfc\x4b\x5d\xea\x33\xf9\x80\x5b\x72\x72\xd4\x7a\x82\xce\xa1\xee\x36\xe2\xbb\x51\xf3\x8d\x7a\x83\xbe\xd4\x5f\xf2\x8b\x18\x07\xfc\x6b\x0d\x26\xfe\xf8\x87\x3e\x40\x8d\x05\x7f\x60\x8f\x1e\xd9\x0d\xe2\x03\xb0\xdd\xb4\x12\xfb\x4a\xfb\x18\x78\x4e\xb5\x77\x86\x5e\x90\x89\x4d\xad\xd6\x05\x74\x46\x5f\xfc\x4b\x8d\x02\xbb\x4d\x2f\xfe\xa7\x8e\xd3\x2b\xe9\x37\x16\xcc\x75\xa2\x33\xf9\x48\xbd\x09\xb5\x5a\x6b\x18\xb2\xc1\x32\xba\xd1\xb3\xcb\xb9\x67\x6b\x2e\x61\x0b\xbf\x43\xdd\x69\xa5\x77\xe0\xcb\xb2\x17\x9f\xd4\x89\xf4\x6f\xfc\x85\x3c\x30\x34\x0c\xc6\x67\x56\x72\xbd\xb6\xc2\x51\xb0\x09\x3f\x90\x8f\x60\xab\xcf\xe5\xc3\xbb\xa1\x6e\x75\xd2\x07\xa8\x49\xc1\x5f\xa3\xe4\x24\x36\xe5\xda\xff\x87\x44\xe3\x69\xe5\x83\xdf\x91\xd7\x29\x96\xe8\x35\xb5\xde\xc3\x7e\x6c\xc4\xff\xf4\x18\xd6\x86\x78\xd4\x92\x6b\x69\x27\x3d\x15\x7c\xd1\x8b\xc9\x09\xfa\xc1\x29\xd7\x0a\x9f\x4a\xfb\xfa\x20\xd8\x24\x2e\x49\x3d\xbf\x77\xf6\xce\x18\xf9\x69\xc4\x4f\xa7\x9f\xf7\x4d\x95\xf3\x8c\x74\x32\x95\x46\x8b\xc5\xd3\x78\xe5\x79\xb4\x58\x9c\x3d\xe9\xa8\xe0\xec\x3c\x5a\xac\xc2\x1c\xf6\x19\xd6\x60\xc8\xef\xc3\xe8\x76\x6a\x48\x98\xdd\x1e\x26\xe4\xcf\x71\xcf\xc7\x06\xd4\x87\xb9\x32\x0c\x86\x8f\x9b\xcc\xac\x9d\xf7\x19\x8e\xae\xe2\xa7\x3b\x23\xcc\x78\x57\x71\xda\x16\x35\x57\x27\xf3\xc5\x55\x7c\x16\x5e\x60\xf4\xb9\x3a\x9d\x8c\x96\x45\x96\xac\xf4\x09\x23\xcd\x95\x8c\x3c\x7f\xd9\x4e\x7e\x99\x9e\xc7\xe1\x19\xda\x5a\x54\xfd\x32\xf8\xeb\xe7\xe0\xa4\xab\x58\x7d\x85\x1d\x57\xe1\xff\x93\x69\xd9\x9e\x7f\xce\x80\x71\x7f\xbb\x77\xbf\x7a\xc4\x28\x75\xc4\x48\xb5\x3d\x42\xdd\x48\x31\x52\x90\xf2\x9d\xbf\x33\x62\xd0\x8a\x47\x6d\x03\xdc\x83\x2e\x42\x9d\x28\x37\xa1\x85\x39\x69\xcd\xd0\x16\x9e\x43\x03\x28\x17\xd0\xd4\x42\xcb\x25\x25\x86\x52\x09\x4d\x61\xcf\x30\xc6\x94\xa2\x07\x6d\x82\x36\xc7\x7a\x4a\x31\x2d\x76\x4e\x7b\x4a\x20\xbf\x69\x91\xb4\x1f\x4a\xeb\xe9\x88\x11\xda\x77\xad\x65\xd2\x49\x5b\xa3\xed\x51\x56\x42\x6a\xe7\x42\x2b\x02\xed\xcb\x64\xaf\x40\xa3\xad\xbc\x9b\x29\x3d\xa0\xf5\xd2\xa6\x29\x67\x94\x0e\x9e\x43\x99\xa0\x9b\x50\x57\x4a\x2c\x36\x43\xb9\x29\x35\xf3\x78\xc1\xa7\x69\xc4\x67\xa1\xcd\x54\x4a\xe1\x53\x69\xdb\x61\xc4\x48\x84\x12\x87\x16\x67\x25\x4e\x9d\x96\xa0\x42\xe5\xd3\xd6\x07\x1d\x31\x88\x07\x65\x33\x8c\x47\x99\x96\xfb\x52\x4a\x2e\xf1\xa0\x4d\xce\xa3\x0d\x71\xe5\x3b\x50\xd8\x5c\xe2\x81\xdd\xa1\x2d\x2b\x8d\xea\xb5\xe4\x63\x03\x36\xd2\x7a\x42\xac\x95\x26\x43\xa9\x78\x97\x76\x35\x26\xa2\x53\x68\x57\x4e\xc7\x8f\x41\xde\x41\x27\x5a\x39\xeb\xc1\x07\x34\x87\x16\x01\x85\x28\xf5\x37\xfe\xa1\xf5\xe0\x7f\x28\x04\xed\x38\x60\x6a\x94\xd8\x33\x6e\xb0\x2f\x14\x07\x6a\x11\x68\x79\x22\xed\x07\xea\x41\xdb\xa1\x15\xd2\x4a\xa0\xd2\x81\xc6\x3a\xa1\x4d\x89\xfa\x29\x50\x14\xa7\xd8\x55\x1a\x08\x25\xc6\x4e\xe8\x32\x98\x41\x5f\x28\xd2\x5c\xfa\x03\xe5\x68\xa4\x65\x39\xa5\xda\xec\x51\xcf\xd4\xb0\x10\xac\x10\x93\x99\x56\x61\x63\xa7\x6d\x11\xea\xc5\x78\x40\x9b\x67\x8c\xa1\x4d\x62\x0f\x3e\x4f\x2b\xa1\x84\xb4\x68\xda\x29\xe3\x9e\x83\x06\x58\xc9\x39\xda\x12\xfb\xb2\x0e\xfd\x6a\xcd\x57\xb0\x82\xbf\xb1\x1f\xaa\xc7\x3d\xa8\x29\x78\xc1\x6f\xb3\x0e\xe4\x49\xa6\xb8\xc3\xb7\xa5\xbe\x6f\x75\x0c\x76\x4a\xf1\x88\x0d\xb8\x02\x1f\x61\xd4\xd7\x16\xd8\xcc\xed\x72\x90\xbd\xa0\xc7\x7c\x9a\xe1\xd1\x5f\xd0\x1d\xe4\xe3\x1b\xab\x7b\x5a\x27\xfe\x87\x3e\xe0\x67\xf2\x11\xd9\x7c\x43\xe3\x88\x39\xe3\x19\x94\x88\x3c\x84\x52\xcd\xa3\x40\xaa\xe3\x25\x3e\x42\x2e\xd7\xc4\x3c\x1c\x25\xe8\x7d\xf2\x12\x9f\x43\xad\x82\xed\x4e\xc6\x8f\x79\x5c\xeb\x35\x77\xc7\x41\x30\x84\x3d\x81\x9e\xb4\xe2\xd3\x5e\x29\x6d\x39\x1f\x43\x0c\x8a\xd1\x51\x74\x60\xd4\x0c\xb9\xe1\x94\xf2\x74\x4a\xf3\x1a\xb1\x19\x5f\x0f\x3a\x52\x91\xe7\x21\xd7\x33\xb5\xc9\x29\xfd\x1e\xe5\x9a\xb8\x86\x5c\xe9\xc5\x17\x8c\xee\xc8\x06\x5b\xd8\x89\x2e\xd0\xab\x20\xbb\x95\x78\xd7\x7a\xa4\x01\x9d\x46\xbf\x6e\xa6\xc8\x85\x50\xc2\x40\xeb\x34\xaf\x90\xe7\x2a\x8d\x6f\x2b\xb1\x47\x67\xde\x63\x8c\x0a\x47\x33\x56\x28\x1b\x71\x44\x67\xa8\x4f\xdb\x48\xbe\x10\x2b\xf6\x0c\x47\x19\xc4\x78\x10\x9f\x06\xfb\x6b\xc9\x51\x7c\x39\x8f\x1e\xe4\x26\x34\x0a\x7a\x9a\x69\x0d\x61\x1c\x03\xaf\xc4\x8b\x9a\x8d\x2e\xe0\x1b\xca\x45\x7d\xe7\x79\xa9\xe3\x06\x74\x89\x58\x90\x0f\xe8\x3b\x2a\x9e\x52\xcd\xb7\x50\x8f\x06\xc1\x24\x75\x16\x1d\xf9\x80\x55\x72\x8e\xb1\x84\x3c\x41\x46\x38\x66\x4a\xe4\x3b\xd4\x86\xfa\x71\x14\x77\x7a\xf4\xc0\xbb\xe8\xc1\x3e\xe4\x0d\x75\x1a\xbc\x50\x4f\xf1\x33\x98\x22\x66\x60\x25\xf4\x12\x3d\x6e\x40\x5f\x7c\x04\x8e\xe9\x47\x61\xa4\xad\x45\xff\x30\x7e\x57\xe2\x8b\x30\x5a\xf7\x52\x73\xa1\xcc\xe0\x94\xfb\xd8\x5c\xe9\xd1\x0e\x7b\x51\x6f\xdf\x37\x7a\xd4\x1a\x2b\xf2\x8e\x51\x05\x0a\x4a\x0d\x62\xcf\x4a\xe3\xd3\xea\xf8\x04\xcd\xa4\xae\x0f\x4a\xd9\x73\x3d\x1e\xa1\x2e\x30\x16\x63\x27\x63\x4b\xea\x84\x6e\x63\x6b\xaa\xc7\x48\xc4\xd0\x29\xdd\x06\x57\xb9\x8e\x84\x33\xe5\x66\x04\x26\x9e\xa5\xfa\xce\x66\xe2\x73\x30\x59\xe9\x91\x19\xa3\x05\xf7\x19\x11\xdb\x5c\xfd\xae\x47\x8e\xc4\x08\x3c\x33\x22\x52\xd7\x2a\x1d\xd9\xe8\x59\xf4\x16\x70\x44\xef\x2e\xf5\x58\x0d\xd9\xf8\x97\x7e\x53\xea\x71\x02\xfb\x87\x4f\x2d\x3a\x61\x67\x38\xaa\x74\x82\x71\x72\x3e\xaf\x24\xc7\xe9\x4f\xb5\x8e\x4e\x61\x2c\x2d\xf4\x18\x53\x8f\x55\x52\x3d\x5e\x2b\xb5\x2f\x93\x3b\xe8\xc9\x7a\x62\x12\xe2\xa2\xfd\x05\xf9\xc4\x24\x70\x1d\xed\x09\xc4\x8a\x7a\x15\xc6\x09\x27\x7e\xa2\x27\x5b\x3d\x6a\x08\xd7\xb5\x1c\xd3\xa5\x3a\x6e\x10\xdb\xe0\xb3\x5c\x70\x58\xeb\xf3\x90\x7f\x56\xfa\x08\xb5\x25\x5c\x3b\x89\x77\xad\x63\x65\xaa\x47\x28\xc4\x95\xda\xf1\x2e\x07\x1b\x75\x0f\xab\xcf\x42\x9f\x6b\x4f\xb9\xdb\x53\x47\x8f\x99\x12\xfe\xd7\x86\x8f\x79\x83\x27\x8c\x1f\x0f\x7f\x78\xfc\xcc\x01\x64\xde\xf2\x37\x1c\x41\xde\x71\xd3\xff\x7c\x08\xf9\x85\x4b\x74\x0c\xc9\x92\xf2\xff\x72\x0c\xd1\xbf\x12\xff\xfa\x41\xa4\x3b\x19\x44\x86\x4f\x1b\x44\x48\xe2\x40\x52\x53\x49\xd4\x87\x73\xf0\x5c\x8a\x7a\x18\x40\x72\x21\x4c\x85\x12\x4a\xee\x55\x4a\xd6\x21\x4d\x10\x8e\x70\xa6\x5e\x6b\xe3\xc8\xb4\xb0\x15\x72\x16\x1d\xce\x09\x95\xb4\x95\xaa\xcb\xdc\x18\x03\x91\xec\x24\xf9\x29\x94\x89\x9e\x2b\xff\x2b\x00\x00\xff\xff\x0c\xcd\x0c\xe5\x00\x20\x00\x00")

func bindataPkgV1TkgManifestTelemetryZzgeneratedBindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataPkgV1TkgManifestTelemetryZzgeneratedBindataGo,
		"pkg/v1/tkg/manifest/telemetry/zz_generated.bindata.go",
	)
}

func bindataPkgV1TkgManifestTelemetryZzgeneratedBindataGo() (*asset, error) {
	bytes, err := bindataPkgV1TkgManifestTelemetryZzgeneratedBindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "pkg/v1/tkg/manifest/telemetry/zz_generated.bindata.go",
		size:        20480,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"pkg/v1/tkg/manifest/telemetry/config-aws.yaml":         bindataPkgV1TkgManifestTelemetryConfigawsYaml,
	"pkg/v1/tkg/manifest/telemetry/config-azure.yaml":       bindataPkgV1TkgManifestTelemetryConfigazureYaml,
	"pkg/v1/tkg/manifest/telemetry/config-vsphere.yaml":     bindataPkgV1TkgManifestTelemetryConfigvsphereYaml,
	"pkg/v1/tkg/manifest/telemetry/zz_generated.bindata.go": bindataPkgV1TkgManifestTelemetryZzgeneratedBindataGo,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op:   "open",
					Path: name,
					Err:  os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op:   "open",
			Path: name,
			Err:  os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"pkg": {Func: nil, Children: map[string]*bintree{
		"v1": {Func: nil, Children: map[string]*bintree{
			"tkg": {Func: nil, Children: map[string]*bintree{
				"manifest": {Func: nil, Children: map[string]*bintree{
					"telemetry": {Func: nil, Children: map[string]*bintree{
						"config-aws.yaml":         {Func: bindataPkgV1TkgManifestTelemetryConfigawsYaml, Children: map[string]*bintree{}},
						"config-azure.yaml":       {Func: bindataPkgV1TkgManifestTelemetryConfigazureYaml, Children: map[string]*bintree{}},
						"config-vsphere.yaml":     {Func: bindataPkgV1TkgManifestTelemetryConfigvsphereYaml, Children: map[string]*bintree{}},
						"zz_generated.bindata.go": {Func: bindataPkgV1TkgManifestTelemetryZzgeneratedBindataGo, Children: map[string]*bintree{}},
					}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
