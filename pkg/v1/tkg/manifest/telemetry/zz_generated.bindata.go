// Code generated by go-bindata. DO NOT EDIT.
// sources:
// pkg/manifest/telemetry/config-aws.yaml
// pkg/manifest/telemetry/config-azure.yaml
// pkg/manifest/telemetry/config-docker.yaml
// pkg/manifest/telemetry/config-vsphere.yaml
// pkg/manifest/telemetry/zz_generated.bindata.go

package telemetry

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}

func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}

func (fi bindataFileInfo) IsDir() bool {
	return false
}

func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataPkgManifestTelemetryConfigawsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x6d\x6b\xdb\x4c\x10\xfc\xae\x5f\xb1\x18\x42\x20\x3c\xf2\x0b\x0f\x84\x22\xc8\x87\x36\x85\x86\x50\x92\xe0\x84\xd2\x52\x4a\x59\x9d\x36\xf6\xc5\xa7\x3b\x71\xbb\xa7\xd4\xfd\xf5\xe5\x64\x29\xf8\x45\x8e\x9d\x42\x2f\x9f\x72\x3b\x37\x33\xbb\x9a\x75\x9a\xa6\x09\x56\xfa\x0b\x79\xd6\xce\x66\x50\x4f\x92\x85\xb6\x45\x06\x37\x58\x12\x57\xa8\x28\x29\x49\xb0\x40\xc1\x2c\x01\xb0\x58\x52\x06\xb2\x98\xa5\xbc\x64\xa1\x32\x15\x32\x54\x92\xf8\x65\x02\x90\xec\x25\xbb\x27\x5f\x6b\x45\xef\x95\x72\xc1\xca\x1e\xc6\x17\xaa\x94\xb1\x2d\x34\x06\xf6\xe8\x35\x6a\x2b\xfa\x4b\x13\x58\xc8\x4f\x9d\xa1\x0d\x7d\x9f\xa3\x1a\x62\x90\xb9\xf3\xfa\x37\x8a\x76\x76\xb8\x78\xc7\x43\xed\x46\xf5\xe4\xa0\x09\xb5\x22\x4d\x7d\x64\xf5\xc1\x10\x47\x64\x0a\x58\xe9\x4f\xde\x85\x8a\x33\xf8\x3e\x18\xfc\x48\x00\x00\x3c\xb1\x0b\x5e\x51\x73\xc7\xa4\x3c\x09\x0f\xfe\x83\xc1\x4b\x0f\xdc\x02\x6b\xf2\x79\x03\x9a\x91\x44\x80\xd1\x2c\x4d\x69\x8b\xb7\x15\x1f\xfe\x4a\x57\x86\xfb\x74\x5a\x4c\x23\x54\xa2\x9a\x6b\x4b\x05\x55\xc6\x2d\x4b\xb2\xf2\x56\x41\x6d\x1f\x3d\xb2\xf8\xa0\x24\x78\x1a\x1e\xa3\x8f\xcf\xbc\x6e\x01\x9f\xb9\x75\x21\x54\x56\x06\xe5\xed\x4d\x3b\x2b\xde\x99\xca\xa0\x3d\xce\xc1\x22\xe4\x84\x45\xb9\xfe\xee\x80\x66\x7f\x68\x3e\x68\x5b\x68\x3b\xfb\x37\xd9\x49\xf3\x96\x9d\x43\xfe\x44\x4a\xda\x18\xf5\x2e\x46\x74\xbe\x77\x21\x0e\xaf\x44\x94\x9b\xd2\x63\x14\xe8\x06\xfb\x4a\x23\x09\xc0\xee\xfa\x1c\xb1\x0b\x3b\x6b\x9e\xa3\xa8\xf9\xa8\x9e\xe4\x24\xd8\x6d\xfc\xa5\x77\xf6\xda\xe5\x87\x26\x75\xc4\x9e\x03\x18\xcc\xc9\x34\x63\x03\xd8\x8e\xc5\xa8\xb3\xb6\x22\x3f\x3d\xe1\xd3\x84\x2b\x52\x11\xcd\x6a\x4e\x45\x30\x94\xc1\x60\x0c\x67\xa3\x73\x38\x8b\x7f\x83\x04\x40\x39\xab\x82\xf7\x64\xd5\xf2\xce\x19\xad\x96\x19\x4c\xa9\x32\xf1\xd7\x0e\xe0\x11\xb5\xa1\xe2\xda\xe5\x7c\xa5\x59\x9c\x5f\x7e\xd6\xa5\x96\x0c\x26\xe3\x04\xe0\xc9\xe5\x0f\x6d\xbc\x57\x86\x3a\xb1\x78\x64\xa3\xb2\x5d\x6d\xfe\xdf\xf8\xde\x7b\x3e\xf3\xea\xa0\x12\x5d\xd3\x47\xc2\xc2\x68\x4b\xf7\xa4\x9c\x2d\x38\x83\xff\xcf\xc7\xe3\x35\x54\xcc\x3e\x6a\x4b\x9e\xd7\x65\x62\xc0\xfa\xa7\xbd\x7e\x74\x89\xb3\x6e\x66\x9b\x15\xe5\xca\x12\x6d\x91\x6d\x5d\x47\xda\xd1\x6b\x8c\x11\x90\xa6\xec\xac\xcb\x83\x5b\xc6\xe4\xa7\x15\xca\xfc\x62\xd4\x5d\xf5\xe2\x63\x3e\xe2\xa0\x29\x0d\xde\x5c\x9c\x70\x2f\x68\x15\x82\xdd\x2a\xd9\x7a\xdb\x66\xd7\xfb\xd5\xc3\xc3\xdd\xcf\xbb\xe9\xed\xd7\x6f\x3b\x8c\x35\x9a\xd0\xdf\xfa\xfa\xe3\xfb\xbf\x7e\x7d\x73\xfb\xa6\xa7\x9e\x58\xd0\x4b\x97\xc5\x1b\xaa\xc9\x27\x7f\x02\x00\x00\xff\xff\xf6\x15\x3d\x26\x9b\x07\x00\x00")

func bindataPkgManifestTelemetryConfigawsYamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPkgManifestTelemetryConfigawsYaml,
		"pkg/manifest/telemetry/config-aws.yaml",
	)
}

func bindataPkgManifestTelemetryConfigawsYaml() (*asset, error) {
	bytes, err := bindataPkgManifestTelemetryConfigawsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "pkg/manifest/telemetry/config-aws.yaml",
		size:        1947,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPkgManifestTelemetryConfigazureYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5d\x6b\x1b\x3b\x10\x7d\xdf\x5f\x31\x18\x42\x20\x44\xfe\xe0\x42\xb8\x2c\xe4\xe1\xde\x14\x1a\x42\x49\x82\x13\x4a\x4b\x29\x65\x56\x3b\xb1\x15\x6b\xa5\x45\x1a\x2d\x75\x7e\x7d\xd1\x7e\x84\xb5\xbd\x8e\x9d\x42\xe4\x27\x6b\x8e\xce\x39\x9a\x3d\x23\x21\x44\x82\xa5\xfa\x4a\xce\x2b\x6b\x52\xa8\x66\xc9\x4a\x99\x3c\x85\x5b\x2c\xc8\x97\x28\x29\x29\x88\x31\x47\xc6\x34\x01\x30\x58\x50\x0a\xbc\x5a\x08\xbf\xf6\x4c\x85\x60\xd2\x54\x10\xbb\x75\x92\xec\xa5\x7a\x20\x57\x29\x49\xff\x49\x69\x83\xe1\x3d\x7c\xaf\x44\xc2\x63\x5b\xa8\xe5\xdf\x52\x6b\xe8\xaf\x74\xf0\x4c\x6e\x6e\x35\x6d\xe8\xbb\x0c\xe5\x18\x03\x2f\xad\x53\x2f\xc8\xca\x9a\xf1\xea\x5f\x3f\x56\x76\x52\xcd\x0e\x9a\x90\x0d\xa9\x70\x91\xd5\x05\x4d\x3e\x22\x05\x60\xa9\x3e\x3b\x1b\x4a\x9f\xc2\x8f\xd1\xe8\x67\x02\x00\xe0\xc8\xdb\xe0\x24\xd5\x7b\x9e\xa4\x23\xf6\xa3\x73\x18\xbd\xde\xc1\xb7\xc0\x8a\x5c\x56\x83\x16\xc4\x11\xa0\x95\xe7\xba\xb4\xc5\xdb\x8a\x8f\x7f\x8b\xc6\xf0\x90\x4e\x8b\xf9\x50\xea\x73\x18\x15\x28\x97\xca\x50\x4e\xa5\xb6\xeb\x82\x0c\xbf\x57\x50\x99\x27\x87\x9e\x5d\x90\x1c\x1c\x8d\x8f\xd1\xc7\x97\xe0\xa8\x15\xae\x4d\xd4\x1b\x7d\x57\x7d\x04\x53\x51\x6a\xe4\xf7\x37\xd9\x1a\x76\x56\x97\x1a\xcd\x71\xb6\x56\x21\x23\xcc\x8b\xfe\xb9\x03\x9a\xc3\x21\xfd\x5f\x99\x5c\x99\xc5\xc7\x64\x55\x64\x2d\xbb\x0f\xd9\x33\x49\x6e\x63\x3b\x38\x88\xd1\xf9\xde\x01\x3c\x3c\x82\x51\x6e\x4e\x4f\x51\xa0\x6b\xec\x1b\x17\x49\x00\x76\xc7\xf5\x88\xd9\xdb\x79\x56\x32\x64\xb9\x9c\x54\xb3\x8c\x18\xbb\x17\xe6\xca\x59\x73\x63\xb3\x43\x9d\x3a\xe2\x5d\x01\xd0\x98\x91\xae\xdb\x06\xb0\x1d\x8b\x49\x67\xad\x21\x3f\x3d\xf1\xa7\x89\x2f\x49\x46\xb4\x97\x4b\xca\x83\xa6\x14\x46\x53\x38\x9b\x5c\xc0\x59\xfc\x8d\x12\x00\x69\x8d\x0c\xce\x91\x91\xeb\x7b\xab\x95\x5c\xa7\x30\xa7\x52\xc7\xb7\x15\xe0\x09\x95\xa6\xfc\xc6\x66\xfe\x5a\x79\xb6\x6e\xfd\x45\x15\x8a\x53\x98\x4d\x13\x80\x67\x9b\x3d\xb6\xf1\x6e\x0c\x75\x62\x71\xf1\x46\x65\xbb\x5a\xff\xdf\xf8\xde\x7b\x3e\x73\xb3\x50\xb2\xaa\xe8\x13\x61\xae\x95\xa1\x07\x92\xd6\xe4\x3e\x85\x7f\x2e\xa6\xd3\x1e\x2a\x66\x1f\x95\x21\xe7\xfb\x32\x31\x60\xc3\xdd\xee\x2f\x55\xe0\xa2\xeb\xd9\x66\x45\xda\xa2\x40\x93\xa7\x5b\xdb\x91\x76\xf2\x16\x63\x04\x08\xe1\xad\xb1\x59\xb0\xeb\x98\x7c\x51\x22\x2f\x2f\x27\xdd\xd6\x20\x3e\xe6\x23\x36\x9a\x44\x70\xfa\xf2\xc4\x0f\x82\x9a\x10\xec\x56\xc9\x54\xdb\x36\xbb\xbb\x5f\x3f\x3e\xde\xff\xba\x9f\xdf\x7d\xfb\xbe\xc3\x58\xa1\x0e\xc3\x57\xef\x1f\x7e\xf8\xeb\xd3\xb7\x77\xef\x3a\xea\xc8\x33\x3a\xee\xb2\x78\x4b\x15\xb9\xe4\x4f\x00\x00\x00\xff\xff\x7e\xaf\x00\xd5\x09\x08\x00\x00")

func bindataPkgManifestTelemetryConfigazureYamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPkgManifestTelemetryConfigazureYaml,
		"pkg/manifest/telemetry/config-azure.yaml",
	)
}

func bindataPkgManifestTelemetryConfigazureYaml() (*asset, error) {
	bytes, err := bindataPkgManifestTelemetryConfigazureYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "pkg/manifest/telemetry/config-azure.yaml",
		size:        2057,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPkgManifestTelemetryConfigdockerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5b\x6b\x1b\x3d\x10\x7d\xdf\x5f\x31\x18\x42\x20\x44\xbe\xf0\x41\xf8\x58\xc8\x43\x9b\x42\x43\x28\x49\x70\x42\x69\x29\xa5\xcc\x6a\x27\xb6\x62\xad\xb4\x48\xa3\xa5\xdb\x5f\x5f\xb4\x97\xe0\xcb\x3a\x76\x0a\x91\x9f\xac\x39\x3a\xe7\x68\xf6\x8c\x84\x10\x09\x96\xea\x2b\x39\xaf\xac\x49\xa1\x9a\x25\x2b\x65\xf2\x14\x6e\xb1\x20\x5f\xa2\xa4\xa4\x20\xc6\x1c\x19\xd3\x04\xc0\x60\x41\x29\xf0\x6a\x21\x7c\xed\x99\x0a\xc1\xa4\xa9\x20\x76\x75\x92\xec\xa5\x7a\x20\x57\x29\x49\x1f\xa4\xb4\xc1\xf0\x1e\xbe\x17\x22\xe1\xb1\x2b\x34\xf2\xaf\xa9\xb5\xf4\x57\x3a\x78\x26\x37\xb7\x9a\x36\xf4\x5d\x86\x72\x8c\x81\x97\xd6\xa9\x3f\xc8\xca\x9a\xf1\xea\x7f\x3f\x56\x76\x52\xcd\x0e\x9a\x90\x2d\xa9\x70\x91\xd5\x05\x4d\x3e\x22\x05\x60\xa9\x3e\x3b\x1b\x4a\x9f\xc2\x8f\xd1\xe8\x67\x02\x00\xe0\xc8\xdb\xe0\x24\x35\x7b\x9e\xa4\x23\xf6\xa3\x73\x18\xbd\xdc\xc1\x77\xc0\x8a\x5c\xd6\x80\x16\xc4\x11\xa0\x95\xe7\xa6\xb4\xc5\xdb\x89\x8f\x7f\x8b\xd6\xf0\x90\x4e\x87\x79\x57\xea\x73\x18\x15\x28\x97\xca\x50\x4e\xa5\xb6\x75\x41\x86\xdf\x2a\xa8\xcc\x93\x43\xcf\x2e\x48\x0e\x8e\xc6\xc7\xe8\xe7\x56\xae\xc8\x75\xca\x8d\x8b\x76\x67\xdd\xd7\x06\x86\xa9\x28\x35\xf2\xdb\xfb\x6c\x0d\x3b\xab\x4b\x8d\xe6\x38\x67\xab\x90\x11\xe6\xc5\xfa\xb9\x03\x9a\xc3\x39\xfd\xa8\x4c\xae\xcc\xe2\x7d\xe2\x2a\xb2\x8e\xdd\x87\xec\x99\x24\x77\xc9\x1d\x9c\xc5\xe8\x7c\xef\x0c\x1e\x9e\xc2\x28\x37\xa7\xa7\x28\xd0\x37\xf6\x95\x8b\x24\x00\xbb\x13\x7b\xc4\xf8\xed\xbc\x2c\x19\xb2\x5c\x4e\xaa\x59\x46\x8c\xfd\x23\x73\xe5\xac\xb9\xb1\xd9\xa1\x4e\x1d\xf1\xb4\x00\x68\xcc\x48\x37\x6d\x03\xd8\x8e\xc5\xa4\xb7\xd6\x92\x9f\x9e\xf8\xd3\xc4\x97\x24\x23\xda\xcb\x25\xe5\x41\x53\x0a\xa3\x29\x9c\x4d\x2e\xe0\x2c\xfe\x46\x09\x80\xb4\x46\x06\xe7\xc8\xc8\xfa\xde\x6a\x25\xeb\x14\xe6\x54\xea\xf8\xbc\x02\x3c\xa1\xd2\x94\xdf\xd8\xcc\x5f\x2b\xcf\xd6\xd5\x5f\x54\xa1\x38\x85\xd9\x34\x01\x78\xb6\xd9\x63\x17\xef\xd6\x50\x2f\x16\x17\x6f\x54\xb6\xab\xcd\xff\x8d\xef\xbd\xe7\x33\xb7\x0b\x25\xab\x8a\x3e\x11\xe6\x5a\x19\x7a\x20\x69\x4d\xee\x53\xf8\xef\x62\x3a\x5d\x43\xc5\xec\xa3\x32\xe4\xfc\xba\x4c\x0c\xd8\x70\xb7\xd7\x97\x2a\x70\xd1\xf7\x6c\xb3\x22\x6d\x51\xa0\xc9\xd3\xad\xed\x48\x3b\x79\x8d\x31\x02\x84\xf0\xd6\xd8\x2c\xd8\x3a\x26\x5f\x94\xc8\xcb\xcb\x49\xbf\x35\x88\x8f\xf9\x88\x8d\x26\x11\x9c\xbe\x3c\xf1\x83\xa0\x36\x04\xbb\x55\x32\xd5\xb6\xcd\xfe\xee\xd7\x8f\x8f\xf7\xbf\xee\xe7\x77\xdf\xbe\xef\x30\x56\xa8\xc3\xf0\xd5\xd7\x0f\x3f\xfc\xf3\xe9\xdb\xbb\x37\x1d\x75\xe4\x19\x1d\xf7\x59\xbc\xa5\x8a\x5c\xf2\x37\x00\x00\xff\xff\xfc\x14\x7b\x2f\x0c\x08\x00\x00")

func bindataPkgManifestTelemetryConfigdockerYamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPkgManifestTelemetryConfigdockerYaml,
		"pkg/manifest/telemetry/config-docker.yaml",
	)
}

func bindataPkgManifestTelemetryConfigdockerYaml() (*asset, error) {
	bytes, err := bindataPkgManifestTelemetryConfigdockerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "pkg/manifest/telemetry/config-docker.yaml",
		size:        2060,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPkgManifestTelemetryConfigvsphereYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5b\x6b\x1b\x3d\x10\x7d\xdf\x5f\x31\x18\x42\x20\x44\xbe\xf0\x41\xf8\x58\xc8\x43\x9b\x42\x43\x28\x49\x70\x42\x69\x29\xa5\xcc\x6a\x27\xb6\x62\xad\xb4\x48\xa3\xa5\xdb\x5f\x5f\xb4\x97\xe0\xcb\x3a\x76\x0a\x91\x9f\xac\x39\x3a\xe7\x68\xf6\x8c\x84\x10\x09\x96\xea\x2b\x39\xaf\xac\x49\xa1\x9a\x25\x2b\x65\xf2\x14\x6e\xb1\x20\x5f\xa2\xa4\xa4\x20\xc6\x1c\x19\xd3\x04\xc0\x60\x41\x29\xf0\x6a\x21\x7c\xed\x99\x0a\xc1\xa4\xa9\x20\x76\x75\x92\xec\xa5\x7a\x20\x57\x29\x49\x1f\xa4\xb4\xc1\xf0\x1e\xbe\x17\x22\xe1\xb1\x2b\x34\xf2\xaf\xa9\xb5\xf4\x57\x3a\x78\x26\x37\xb7\x9a\x36\xf4\x5d\x86\x72\x8c\x81\x97\xd6\xa9\x3f\xc8\xca\x9a\xf1\xea\x7f\x3f\x56\x76\x52\xcd\x0e\x9a\x90\x2d\xa9\x70\x91\xd5\x05\x4d\x3e\x22\x05\x60\xa9\x3e\x3b\x1b\x4a\x9f\xc2\x8f\xd1\xe8\x67\x02\x00\xe0\xc8\xdb\xe0\x24\x35\x7b\x9e\xa4\x23\xf6\xa3\x73\x18\xbd\xdc\xc1\x77\xc0\x8a\x5c\xd6\x80\x16\xc4\x11\xa0\x95\xe7\xa6\xb4\xc5\xdb\x89\x8f\x7f\x8b\xd6\xf0\x90\x4e\x87\x79\x57\xea\x73\x18\x15\x28\x97\xca\x50\x4e\xa5\xb6\x75\x41\x86\xdf\x2a\xa8\xcc\x93\x43\xcf\x2e\x48\x0e\x8e\xc6\xc7\xe8\x57\xbe\x5c\x92\xa3\x4e\xba\xb1\xd1\x6d\xad\x3b\xdb\x44\x31\x15\xa5\x46\x7e\x7b\xab\xad\x61\x67\x75\xa9\xd1\x1c\x67\x6e\x15\x32\xc2\xbc\x58\x3f\x77\x40\x73\x38\xaa\x1f\x95\xc9\x95\x59\xbc\x4f\x62\x45\xd6\xb1\xfb\x90\x3d\x93\xe4\x2e\xbc\x83\xe3\x18\x9d\xef\x1d\xc3\xc3\x83\x18\xe5\xe6\xf4\x14\x05\xfa\xc6\xbe\x72\x91\x04\x60\x77\x68\x8f\x98\xc0\x9d\xc7\x25\x43\x96\xcb\x49\x35\xcb\x88\xb1\x7f\x67\xae\x9c\x35\x37\x36\x3b\xd4\xa9\x23\x5e\x17\x00\x8d\x19\xe9\xa6\x6d\x00\xdb\xb1\x98\xf4\xd6\x5a\xf2\xd3\x13\x7f\x9a\xf8\x92\x64\x44\x7b\xb9\xa4\x3c\x68\x4a\x61\x34\x85\xb3\xc9\x05\x9c\xc5\xdf\x28\x01\x90\xd6\xc8\xe0\x1c\x19\x59\xdf\x5b\xad\x64\x9d\xc2\x9c\x4a\x1d\x5f\x58\x80\x27\x54\x9a\xf2\x1b\x9b\xf9\x6b\xe5\xd9\xba\xfa\x8b\x2a\x14\xa7\x30\x9b\x26\x00\xcf\x36\x7b\xec\xe2\xdd\x1a\xea\xc5\xe2\xe2\x8d\xca\x76\xb5\xf9\xbf\xf1\xbd\xf7\x7c\xe6\x76\xa1\x64\x55\xd1\x27\xc2\x5c\x2b\x43\x0f\x24\xad\xc9\x7d\x0a\xff\x5d\x4c\xa7\x6b\xa8\x98\x7d\x54\x86\x9c\x5f\x97\x89\x01\x1b\xee\xf6\xfa\x52\x05\x2e\xfa\x9e\x6d\x56\xa4\x2d\x0a\x34\x79\xba\xb5\x1d\x69\x27\xaf\x31\x46\x80\x10\xde\x1a\x9b\x05\x5b\xc7\xe4\x8b\x12\x79\x79\x39\xe9\xb7\x06\xf1\x31\x1f\xb1\xd1\x24\x82\xd3\x97\x27\x7e\x10\xd4\x86\x60\xb7\x4a\xa6\xda\xb6\xd9\xdf\xfd\xfa\xf1\xf1\xfe\xd7\xfd\xfc\xee\xdb\xf7\x1d\xc6\x0a\x75\x18\xbe\xfa\xfa\xe1\x87\x7f\x3e\x7d\x7b\xf7\xa6\xa3\x8e\x3c\xa3\xe3\x3e\x8b\xb7\x54\x91\x4b\xfe\x06\x00\x00\xff\xff\x06\xcb\x68\x3f\x0f\x08\x00\x00")

func bindataPkgManifestTelemetryConfigvsphereYamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPkgManifestTelemetryConfigvsphereYaml,
		"pkg/manifest/telemetry/config-vsphere.yaml",
	)
}

func bindataPkgManifestTelemetryConfigvsphereYaml() (*asset, error) {
	bytes, err := bindataPkgManifestTelemetryConfigvsphereYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "pkg/manifest/telemetry/config-vsphere.yaml",
		size:        2063,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPkgManifestTelemetryZzgeneratedBindataGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9a\x5b\x6f\x1b\x47\x96\xc7\x9f\xd9\x9f\xa2\x57\x40\x02\x72\xa1\x48\x7d\xbf\x08\xf0\x4b\x6c\x2f\x90\x87\x24\x8b\x5d\xef\xc3\x62\x6a\x10\xf4\xa5\x5a\x21\x2c\x89\x1a\x92\x4a\xca\x0a\xfc\xdd\x07\xbf\x73\x4e\x4b\xb4\xe2\xd8\xd2\xc4\xc9\x20\x80\x0d\xd0\x14\x9b\xdd\xa7\xce\xfd\xfc\xff\x55\x3c\x3d\x8d\x9f\x6f\x46\x1f\x9f\xfb\x2b\xbf\xed\xf6\x7e\x8c\xfb\x37\xf1\xf9\xe6\xab\x7e\x7d\x35\x76\xfb\xee\x24\x7e\xf1\x7d\xfc\xdd\xf7\xaf\xe2\x97\x2f\xbe\x79\x75\x12\x9d\x9e\xc6\xbb\xcd\xcd\x76\xf0\xbb\x33\xfe\xbe\x7e\x7d\x7e\x7a\xd9\x5d\xad\x27\xbf\xdb\x9f\xee\xfd\x85\xbf\xf4\xfb\xed\x9b\xd3\x61\x73\x35\xad\xcf\xbf\xea\x7e\xde\x9d\xbc\xe9\x2e\x2f\x1e\x71\xe7\xed\xcd\xd6\x3f\xf2\xde\x71\x33\xbc\xf6\xdb\x47\xde\xfc\xd3\xee\xfa\x47\xff\x71\xd1\xb7\xb7\x3f\xdc\xd9\x7f\x32\x5b\x7e\xbe\x89\xa2\xeb\x6e\x78\xdd\x9d\xfb\xf8\xee\xd6\x28\x8a\xd6\x97\xd7\x9b\xed\x3e\x5e\x46\x8b\xa3\xfe\xcd\xde\xef\x8e\xa2\xc5\xd1\xb0\xb9\xbc\xde\xfa\xdd\xee\xf4\xfc\x76\x7d\xcd\x85\xe9\x72\xcf\xdb\x7a\xa3\xff\x9f\xae\x37\x37\xfb\xf5\x05\x1f\x36\xf2\xc0\x75\xb7\xff\xf1\x74\x5a\x5f\x78\xfe\xe0\xc2\x6e\xbf\x5d\x5f\x9d\xcb\x77\xfb\xf5\xa5\x3f\x8a\x56\x51\x34\xdd\x5c\x0d\xb1\xa9\xf3\x3f\xbe\x1b\x97\xfc\x11\xff\xed\xef\x2c\x7b\x1c\x5f\x75\x97\x3e\xd6\xc7\x56\xf1\x72\xbe\xea\xb7\xdb\xcd\x76\x15\xff\x12\x2d\xce\x6f\xe5\x53\x7c\xf6\x2c\x46\xab\x93\xef\xfc\xcf\x08\xf1\xdb\xa5\xa8\xcd\xe7\xaf\x6f\xa6\xc9\x6f\x45\xec\x6a\x15\x2d\xd6\x93\x3c\xf0\x1f\xcf\xe2\xab\xf5\x05\x22\x16\x5b\xbf\xbf\xd9\x5e\xf1\xf1\x38\x9e\x2e\xf7\x27\x2f\x91\x3e\x2d\x8f\x10\x14\x7f\xf1\x8f\xb3\xf8\x8b\x9f\x8e\x54\x13\x59\x6b\x15\x2d\xde\x46\xd1\xe2\xa7\x6e\x1b\xf7\x37\x53\xac\xeb\xe8\x22\xd1\xe2\x07\x55\xe7\x59\xbc\xde\x9c\x3c\xdf\x5c\xbf\x59\x7e\xd9\xdf\x4c\xc7\xf1\xf9\xed\x2a\x5a\x0c\x17\x2f\x67\x4d\x4f\x9e\x5f\x6c\x76\x7e\xb9\x8a\x3e\x95\x3e\x88\x51\xf9\xbf\x21\xc8\x6f\xb7\xaa\xb7\x5d\xec\x6f\xa6\x93\xaf\x51\x7d\xb9\x3a\xe6\x8e\xe8\x6d\x14\x45\xfb\x37\xd7\x3e\xee\x76\x3b\xbf\xc7\xe7\x37\xc3\x1e\x31\x62\xa0\x05\x24\x5a\xac\xaf\xa6\x4d\x1c\x13\xd4\x6f\xae\xa6\xcd\xcb\xc0\x73\xf2\xd8\xfd\xa5\x78\x7d\xb5\xf7\xdb\xa9\x1b\x3c\x8f\x6f\x76\x27\xff\x65\x5f\x45\x8b\x6f\x5f\x94\xcf\x7f\xf4\xc3\xeb\xdd\xcd\xe5\x72\x65\x71\xbd\x93\x60\x49\x30\xdf\x7d\xa0\x82\x64\x81\xfd\xb3\x87\x16\xbb\xf5\xed\xdd\xb5\xf5\xd5\xbe\x2a\xa2\xc5\x25\x35\x6e\xff\x6c\xd9\x6f\x37\xa3\x97\x2f\x5e\xad\x4d\x04\x89\x77\xc2\xa7\x68\x71\x39\x96\x83\x69\x73\xa0\x8b\x24\xe4\x72\x5a\x3f\xd4\x67\x15\x7f\xd7\x5d\xfa\x3b\xb5\xd1\xcb\x7c\x39\xad\x4f\xd0\x30\x7a\xfb\x81\x67\xff\x77\x7d\xcb\xb3\xa2\xe9\xbb\x8f\x62\xc8\x07\x1f\xc5\x86\xe5\xea\xd0\xa2\x77\x05\x60\xf6\xc7\x04\x60\xf0\x72\x75\x6f\xfc\xaf\x24\x88\x47\x3e\x28\xe4\x3d\xa1\x7b\x20\xe5\xde\x9d\x1f\x94\xf4\xcd\xee\xc5\x7a\xbb\x5c\xc5\xfd\x66\x73\x71\x28\xa1\xbb\xd8\x7d\xc4\x87\x6f\x76\xea\x42\xcd\xae\x5f\xde\x1e\x3c\x6d\x29\x4c\x55\xfe\x60\x0f\xfe\xf7\xeb\xf3\x6f\xad\x0d\xbe\x9a\x5b\xdb\x73\x69\x99\xdd\xcf\xbb\xff\xef\x2e\x2f\xe2\x67\x96\xd6\xcb\x23\x17\xd2\xc9\x85\xa6\x77\x21\x69\x5c\x48\x92\xf7\xbf\xa6\xc9\x85\xbe\x70\xa1\x2c\x5c\xa8\x46\x17\xaa\xde\x85\xb1\x77\xa1\x18\x5c\x48\xf9\x7e\x70\xa1\xf3\x2e\x94\xdc\x97\xba\x90\x36\x2e\x14\x99\x0b\x59\xe2\x42\x3e\xb8\x30\x65\x2e\x24\xac\xc1\x5a\x85\x0b\x59\xe6\xc2\xd0\xb8\xd0\xd4\x2e\xe4\x95\x0b\x4d\xe9\x42\x53\xb9\x50\x26\x2e\xb4\x99\x0b\x3e\xd1\xfb\xc6\xcc\x85\x32\x73\xa1\xe8\x5c\x28\x5b\x17\xda\x51\xef\x9f\x2a\x17\x86\xd2\x85\x8e\xe7\x7b\x17\xea\xd4\x85\xbe\xd7\xcf\x63\xe1\xc2\x34\xba\x30\x95\x2e\xf8\xd2\x85\x8a\xf5\x5a\x17\x26\x74\x62\x1d\xaf\x72\x44\xbf\xc9\x85\x76\x72\xa1\xce\x54\x4e\x8e\xbc\x5c\x65\xb5\x9d\x0b\x75\xa9\xef\x5d\xe5\x42\xd2\xba\x50\xb2\x76\xa7\xb6\xd4\xad\x0b\x23\x7a\x78\x17\x2a\xd3\xbd\x98\x54\x7f\xec\xe9\x2b\x5d\x2f\xa9\x54\x6e\xd9\xb8\x90\x62\x4f\xed\x42\xd7\xb8\x90\x35\xaa\x57\xd1\xba\xd0\xf3\x6c\xe2\xc2\x90\xba\x90\x0d\x2e\x24\xa9\x5e\xe3\x19\xec\x47\x46\x9f\xb9\xd0\x36\x2e\x74\xc8\x1e\xd4\xae\x2e\x75\x21\xcf\x5c\x48\x4b\x7d\x27\x3e\xac\x8f\xad\x15\x6b\xf3\x4c\xe2\x82\x1f\x5c\xc8\x4a\xb5\x2b\xab\x35\x4e\xc4\x10\xfd\x3c\x3a\x97\xea\x03\xd6\x1f\x3a\x17\x52\xef\xc2\x50\xb9\x90\xa2\x6b\xe7\x42\x5b\x68\x5c\x33\xfc\x5f\xa8\x3e\xc4\xc0\x37\x2e\xe4\xf8\xb8\x73\x21\xeb\xd5\x37\x45\xef\x42\x9a\xab\xee\xc4\x58\x7c\x32\xaa\xae\xc9\xe8\x42\x3d\xaa\xcf\xbb\xdc\x85\xb4\x73\xa1\x32\x1d\x7b\x62\x94\xab\x0c\xfc\xd5\xe0\xff\x4a\x5f\x7d\xe3\x42\x8d\xbc\xda\x85\x22\x77\xc1\x13\xbf\xca\x62\x8c\x1f\x12\x8d\x4f\x5f\x6a\x6e\x15\xb6\x0e\x3e\xe2\x1e\xec\x22\x4f\x8b\x5a\xaf\x25\x9d\xea\xe7\x5b\xd5\x6f\xf4\x96\x83\x9d\xc6\x1f\xff\xe5\x5e\xf3\x98\xdc\x2e\x0e\x6a\x83\x7c\xc6\x17\xe4\x40\x49\xce\xa7\x2e\xd4\xb9\xea\xd6\x15\xfa\x3d\xba\x90\xeb\x13\x72\x73\x5d\xbf\xb0\xfc\x1f\x07\x8d\x0b\xfe\xa7\x2e\xc8\xa3\x24\xd7\x3c\x6b\xb9\xaf\x70\xa1\x49\x5c\x18\x2d\x17\xb0\xa5\x6a\xb5\x46\xfb\x5a\x63\x9d\x9a\x6c\xa9\x8b\x5a\x6b\x67\x22\x27\xa9\xd1\x4e\xeb\x32\xcb\x35\x1f\xba\x4c\x65\x4b\xbc\xd1\xa1\x74\xa1\x2c\x35\xbe\xc4\x93\x6b\xe4\x16\xba\x90\xdf\x45\xaa\x35\xce\x1a\xf9\x68\xdf\x35\xea\xe3\xac\xd0\x38\xa4\x96\x23\xc4\xb0\x99\x5c\x18\x26\xcb\x49\xaf\xb9\x4b\x7c\x89\x27\xf5\x93\xa5\xaa\x07\xb2\xc9\x1b\x6a\x52\xe2\x37\x6a\xcd\x91\x37\xf8\xbf\x6d\x35\xf7\x58\x87\x75\xa9\x2b\xa9\x87\x4c\x63\x4c\x3f\x20\x5f\x25\x4f\xbc\x0b\xde\xab\x9f\xa8\xbd\x9a\x7c\xb6\x98\xf1\x5e\xf6\xf6\xb9\x57\xbf\x90\x4f\xa3\xd5\x1a\x39\xd6\x56\xd6\x03\x72\xf3\x63\xa1\xbe\x1c\x3b\x8b\x39\x7a\x7b\xcd\x31\x7c\xda\x7b\x17\xea\x5a\x6d\x49\xb0\x7b\xd2\x67\xa8\x8b\xb6\xd7\x3e\x55\x91\xcf\x85\xd6\x44\x62\xf1\x40\x26\x71\x20\x1f\x86\x44\x75\x26\xbf\xd3\x83\x1c\x42\x47\x62\xd3\x9a\x3f\xe9\x0d\x53\xab\xef\x5c\xc3\x76\xfc\x3e\x36\x1a\x17\xe9\xb5\xa5\xea\x43\x0d\xa2\x33\x3e\xa5\x97\x66\x95\xfa\x7c\x28\xf4\x59\xf2\x0a\x7b\x86\xc1\x85\xa1\xd5\xda\x45\x4f\xae\x23\x8f\x5e\x28\x7d\xb4\x71\xa1\xcf\xb5\x67\xe1\xef\xdc\x62\xef\x53\x17\xc6\xdc\x7a\x76\xaf\xbd\x28\xa5\x47\x8c\x5a\xf3\x85\xd7\x98\xe4\x89\xfa\x82\x78\x55\xd4\x09\xb9\x50\xab\x3d\xd4\x46\xde\x68\xfe\x12\x27\xea\x21\x29\xb4\xdf\xe5\xd8\xd9\xbb\xd0\x90\x63\x56\x9b\x63\xa9\xb9\x48\xfc\x53\xbe\x1f\x35\x5e\xfc\x4d\x5e\x77\xad\xf6\xba\x09\xdd\x6a\x8d\x07\xf3\x02\xbd\xa8\x7f\xfa\x8c\xcf\xee\xfd\x52\x9b\xbf\x64\x7e\x0c\xda\xfb\x6a\xaf\xbd\x9b\xeb\xc8\x46\x5f\x7c\xe7\x4d\x37\xe4\xe1\x2f\x9e\xa7\x66\xf1\x3b\xf9\x3d\xd7\x5a\xde\x69\xfc\xa8\x05\xe9\xc3\xb9\xd6\x49\x39\x5a\x8c\x90\x3f\x69\xdd\x90\xdb\x75\xaf\xb9\x49\xee\x79\xcb\xf1\xd4\xee\xc7\xbf\xf4\xa5\x21\xd3\x17\x79\x4b\x4d\x4e\xd6\x4f\xd0\x59\xfa\x6e\xa3\xbe\x9b\xac\xde\xe8\x37\xe8\x4b\xff\xa5\xbe\x88\xb1\xe4\xbf\xf5\x60\xe2\x8f\x7f\x98\x03\xf4\x58\xf2\x8f\xdc\x63\x46\xf6\xa3\xfa\x80\xdc\x6e\x5a\x8d\x7d\x65\x73\x8c\x7c\x4e\x6d\x76\xca\x2c\xc8\xd4\xa6\xd6\xfa\x02\x3a\xa3\x2f\xfe\xa5\x47\x91\xbb\xcd\xa0\xfe\xa7\x8f\x33\x2b\x99\x37\x1d\x39\xd7\xab\xce\xd4\x23\xfd\x46\x7a\xb5\xf5\x30\x64\x93\xcb\xe8\xc6\xcc\x2e\xe7\x99\x6d\xb5\x84\x2d\xfc\x2d\x7d\xa7\xd5\xd9\x81\x2f\xcb\x41\x7d\x52\x27\x3a\xbf\xf1\x17\xf2\xc8\xa1\x71\x74\x21\xeb\xb4\xd6\xeb\x4e\x31\x0a\x36\xe1\x07\xea\x91\xdc\x1a\x72\x7d\x71\xaf\xf4\xad\x5e\xe7\x00\x3d\x49\xfc\x35\x69\x4d\x62\x53\x6e\xf3\x7f\x4c\x2c\x9e\x9d\xbe\xf0\x3b\xf2\x7a\xcb\x25\x66\x4d\x6d\xd7\xb0\x1f\x1b\xf1\x3f\x33\x86\x67\x25\x1e\xb5\xd6\x5a\xda\xeb\x4c\x25\xbf\x98\xc5\xd4\x04\xf3\xe0\x10\x6b\xc9\xab\xb2\xb9\x3e\x6a\x6e\x12\x97\xa4\x9e\xef\x3b\x7a\xc0\x20\x3f\x8a\xf9\x8c\xf3\xbc\x8f\x4b\xce\xcc\xe8\x80\x8b\x46\x8b\xc5\xa3\xd1\xe4\x71\xb4\x58\x1c\x3d\x6e\xb3\xe0\xe8\x38\x5a\xac\x84\x71\x3d\x4d\x79\xf4\xfe\x4f\xe1\x67\x87\x7a\x0b\x41\xbb\xa3\xc1\x4f\x74\xc4\xc7\x08\xe8\x1d\x6f\x14\xe2\x77\x2f\x7f\x46\xe5\xdc\x0f\xf9\x39\x8b\x9f\x60\xbb\x90\xb7\xb3\x38\x6d\x8b\x9a\x4f\x07\xc4\xe1\x2c\x3e\x92\x1b\xe0\x34\x67\x87\x94\x67\x59\x64\xc9\xca\xbe\x81\xab\x9c\x29\x97\xf9\xbf\xab\x75\x58\xa6\xc7\xb1\x7c\x87\x9a\x1d\x3a\x7e\x29\x3e\xfa\x45\x1c\x73\x16\x9b\x7f\x30\xe0\x4c\xfe\x3f\xa0\xc1\xdd\xf1\x13\x99\xc3\xed\xcd\xd6\xff\x6e\xee\x50\x1a\x77\x48\x6d\xee\x81\xc9\xa8\x1d\x6a\x8b\xbe\x9c\x3f\xe0\x0e\xcc\xd8\xc9\xfa\x3b\xd7\xc0\x81\x60\x22\xfa\x88\xcc\x26\xaf\x33\x17\x3c\xc2\xf7\xcc\x77\xfa\x00\xf8\xb3\xb0\x3e\x48\xef\xa0\x07\x82\x3f\x58\x53\xf8\x49\xa9\x7a\xd0\xff\x99\x5f\x3c\x4f\x8f\x65\x76\xce\xf5\x4c\x6f\xe3\x6f\x66\x1f\x73\x85\x9e\x79\xc8\x1d\x64\x2e\xd7\xd6\xff\xbc\xce\x2b\xe6\x19\xfd\x42\x6a\x36\x57\xbc\x20\x78\x2e\xd3\xb5\x04\x1f\x77\x7a\x6f\x66\x73\x9f\x99\xca\xfc\xa5\x4f\xd1\x13\xf8\x1e\x2c\x04\x8e\x04\x93\xd2\x3b\xb1\x19\x2c\x4d\x0f\x99\x79\x03\xaf\xa6\x51\x9f\xc9\xfc\xa8\x0c\x9b\xa7\x3a\x8f\x85\x3b\x24\x8a\x75\x65\x76\x75\x1a\xa7\xde\x7a\x4b\x61\xf2\x99\xd7\xa3\x71\x07\xe2\x41\x3f\x14\xde\x93\x59\x1f\x2f\xb5\x97\x12\x0f\xe6\xdf\xcc\x59\x88\x2b\xef\x82\x4d\x73\x8d\x07\x76\xcb\xbc\x35\x7c\x34\x58\x2f\xc7\x06\x6c\x64\xa6\x48\xac\x0d\xff\x82\x95\xb8\x97\x39\x34\x25\xaa\x93\xcc\x21\x6f\xbc\x62\xd4\x7b\xd0\x89\x19\xcd\xf3\xe4\x07\xf8\x85\xde\x0f\x36\x28\xed\x6f\xfc\xc3\x4c\xc1\xff\x60\x03\xe6\xac\xe4\xd4\xa4\xb1\x87\x47\xb0\x2e\xd8\x05\xcc\x20\x78\x3b\xd1\xb9\x02\xa6\x60\x9e\x30\xe3\x98\x11\x60\x64\xc1\xa7\x5e\xf1\x50\x62\x7e\x12\xec\xe1\x2d\x77\x0d\xdf\x81\x75\xb1\x13\x1c\x4c\xce\xa0\x2f\xd8\x67\xee\xe9\x82\x25\x1a\x9d\x45\xde\x30\x34\x6b\xd4\x33\xe6\x2b\x34\x57\x88\xc9\x8c\x97\xb0\xb1\xb7\x79\x07\xa6\x02\xf7\x33\xbf\xe1\x27\xcc\x3f\xec\xc1\xe7\x69\xa5\x58\x8f\xd9\xcb\x9c\x84\xc7\x79\xe6\x7b\xa7\x35\xc7\xbc\x61\x5d\x9e\x43\xbf\xda\xea\x95\x5c\xc1\xdf\xd8\x0f\x86\xe3\x1a\x98\x93\x7c\xc1\x6f\xb3\x0e\xd4\x49\x66\x79\x87\x6f\x4b\xbb\xbf\x33\x7e\xeb\x0d\xbb\x11\x1b\xf2\x8a\xfc\x10\x0e\x6f\xb3\xad\x99\xe7\xe0\xa8\x6b\x81\x7b\x79\x35\xe3\xbd\xbf\xc0\x31\xc8\xc7\x37\x9d\xad\xd9\x79\xf5\x3f\xb8\x00\x3f\x53\x8f\xc8\xe6\x1d\x7c\x46\xcc\xe1\x5d\x60\x1d\xea\x10\xac\x34\x63\xfc\xd4\x78\x23\x3e\x42\x2e\x9f\x89\xb9\xec\x11\xd8\x75\xea\x12\x9f\x83\x99\xc4\x76\xaf\xbc\x62\xe6\x61\x83\xd5\xee\x34\x6a\x0e\x61\x8f\xe0\x8e\x56\x7d\x3a\x18\x56\x2d\xe7\xfd\x85\xd1\x72\x74\x52\x1d\xe0\x90\x52\x1b\xde\xb0\x4c\x6f\xf8\xad\x51\x9b\xf1\xf5\x68\x5c\x89\x3a\x97\x5a\xcf\xcc\x26\x6f\xb8\x7a\xd2\xcf\xc4\x55\x6a\x65\x50\x5f\xc0\xc9\x91\x4d\x6e\x61\x27\xba\x80\x9b\x44\x76\xab\xf1\xae\x6d\xaf\x02\x9c\x8c\x7e\xfd\x8c\x7d\x0b\xc5\x7a\x82\xd7\xac\xae\x90\xe7\x2b\x8b\x6f\xab\xb1\x47\x67\xee\x83\x1f\xc9\x9e\x4b\xa7\x58\x8c\x38\xa2\x33\x98\xa6\x6d\xb4\x5e\x88\x15\x6b\xca\x1e\x05\x31\x1e\xd5\xa7\x62\x7f\xad\x35\x8a\x2f\x67\x4e\x41\x6d\x82\x8f\xc0\x9d\x99\xf5\x10\x78\x16\xf9\x4a\xbc\xe8\xd9\xe8\x42\x7e\x83\xa5\xe8\xef\x7c\x5f\x1a\x8f\x00\x07\x11\x0b\xea\x01\x7d\x27\xcb\xa7\xd4\xea\x4d\xfa\xd1\xa8\x39\x49\x9f\x45\x47\x5e\xe4\x2a\x35\x07\xdf\xa0\x4e\x90\x21\xfb\x47\x89\xbe\x4b\x6f\xa8\xef\x39\xb6\xb7\x3d\x05\xee\x45\x0f\xd6\xa1\x6e\xe8\xd3\xe4\x0b\xfd\x14\x3f\x93\x53\xc4\x8c\x5c\x91\x59\x62\xfb\x08\xe8\x8b\x8f\xc8\x63\xe6\x91\x70\xd5\x5a\xf5\x17\x5e\x5d\xa9\x2f\x84\x33\x0f\xda\x73\xc1\xc2\xe4\x29\xd7\xb1\xb9\xb2\x3d\x1b\xd6\xa2\xdf\xbe\x8f\x53\xd4\x16\x2b\xea\x0e\x0e\x02\xb6\xa4\x07\xb1\x66\x65\xf1\x69\x8d\x17\x81\x1f\xe9\xeb\xa3\x61\xf1\xdc\xf6\x3d\xe8\x0b\xf0\x5d\xec\x84\x8f\xc0\xed\xc1\xd1\xd8\x9a\xda\xfe\x10\x31\xf4\x86\xa3\xc9\xab\xdc\xb8\xde\x8c\xa5\xe1\xb6\xc4\xb3\x34\xdf\x75\x99\xfa\x9c\x9c\xac\x6c\x2f\x0c\xce\xc0\x75\xb8\x5f\x9b\x9b\xdf\x6d\x2f\x91\x18\x91\xcf\x70\x3f\xfa\x5a\x65\x5c\x8c\x99\xc5\x6c\x21\x8f\x98\xdd\xa5\xed\x97\x21\x1b\xff\x32\x6f\x4a\xdb\x27\x60\x7d\x79\xd5\xaa\x13\x76\xca\x1e\xa4\xd7\x1c\xa7\xe6\xf3\x4a\x6b\x9c\xf9\x54\x1b\x27\x12\xbe\x59\xd8\xfe\xa4\xed\x97\xa4\xb6\x6f\x56\xda\x5c\xa6\x76\xd0\x93\xe7\x89\x89\xc4\xc5\xe6\x0b\xf2\x89\x89\x60\x1d\x9b\x09\xc4\x8a\x7e\x25\x3c\xc1\xab\x9f\x98\xc9\x9d\xed\x21\xc8\xe7\x5a\xf7\xdf\x52\xe3\x11\xc4\x56\x7c\x96\x6b\x1e\xd6\xf6\xbd\xd4\x5f\xa7\x73\x84\xde\x22\x9f\xbd\xc6\xbb\x36\xbe\x98\xda\xde\x08\x71\xa5\x77\x3c\xc4\x60\x93\xad\xd1\xd9\x77\x32\xe7\xda\x43\xec\xf6\x04\x4e\x31\xa3\xc1\x3f\x82\x55\xcc\xb2\x1f\xc3\x2b\xee\x8e\x16\x9f\xce\x2c\xe6\x65\x3e\x0d\xb7\x78\xe0\x90\x3f\x8f\x5d\xbc\xe3\x01\xe3\x17\x59\x52\xfe\xd5\xf8\x85\x1e\xfc\xfe\x7e\x82\xd1\x1f\x10\x8c\xf1\x71\x04\x83\xe2\x14\xf0\x99\x6a\x01\xde\x6d\x5c\xe7\xda\xac\x85\x58\xe4\x0a\x84\x0a\x03\x8a\x5c\xab\x0c\x84\x03\x86\x00\x12\xb2\x09\x5e\xdb\x40\xc8\xac\x61\x15\xba\x79\x2c\x1b\x7b\x06\xc6\x4a\xd3\x65\x1e\x78\x02\x10\x7b\x2d\x6a\x1a\x60\x62\x1b\xc1\xb2\x49\x3e\x28\xa9\x90\x82\xaf\x75\xb3\x03\xa0\xc8\x00\x6f\x0c\xb0\xcb\x90\xaa\xb4\x41\x40\x2a\x64\x53\xcd\x9e\x45\x5f\x1a\x0e\x0d\x2d\x2b\x8d\x74\xd8\x06\x1b\x83\x95\xe1\x23\x1b\xfb\x89\xea\x44\x73\x06\x90\x0a\x28\x4d\xec\x10\x60\xd0\xcd\xb7\xd1\x1a\x32\x83\xb7\x32\x7f\xc9\xc1\x4a\x62\xb6\xa7\xda\x8c\xfd\xa8\x40\x09\x3b\x00\xaf\x22\xaf\x55\x79\x75\xf5\x38\x72\x41\xdc\x79\xae\xb7\x4d\x45\xd6\x60\x28\x11\x2b\x00\x8b\x6c\x0a\xa7\xa6\x7b\xaf\xc4\x07\x9b\xc4\x6e\x3b\x08\x98\x0a\x95\x29\x7e\x6d\x74\x13\x25\xb7\x01\x2f\x24\xad\xb2\x7b\x46\xdd\xd4\xab\x33\xf3\x6b\xaa\x71\x91\x0d\xc2\x56\x1b\xfc\xfb\xc8\x45\xfd\x08\x72\x91\xfd\x1b\xc8\x45\xfe\x58\x72\x31\xa8\x6f\xeb\x07\xe4\x02\xbb\x01\x2b\xbf\x45\x2e\xba\xea\x01\xb9\x68\xdf\x25\x17\xe3\x43\x72\x51\x1b\x20\xad\x9f\x46\x2e\xc8\x13\x72\x8c\xd8\x50\xbf\x00\x92\xce\x36\xb3\x5b\x03\xa7\x83\x01\x17\x39\xa0\xf1\x46\xc4\x0d\x14\xe3\x2b\xf4\x25\x3e\x80\x20\xfc\x54\xdb\xc6\x63\x63\x20\x95\xb8\x55\x33\x58\xa8\x15\xc4\x36\x16\xf7\xcc\x0e\xb7\xc8\xab\xd1\x0e\x12\xaa\x41\x09\x63\x6e\x40\x92\xc1\x8b\x2c\xc0\x45\x6e\xb1\x11\x80\x69\x1b\xd2\xde\x0e\x2a\x01\x19\x0f\x09\x06\x75\x0a\x68\xc4\xa6\xc2\x0e\x50\xb1\x0d\xa0\x4d\xcf\xe2\x1d\x9b\x19\xf2\xd8\x85\x8e\xf8\xd2\x1b\x11\x91\xc3\x98\x5a\xc1\x09\xa0\x1b\x80\xcf\x5a\xde\x40\x11\xc0\x01\x60\x49\xdd\x90\x0b\xe4\x91\xd8\x54\x2b\xf0\xea\x6c\x33\x01\x30\x9f\xdb\x61\x02\x31\xc6\x2f\xc8\x4e\x6c\x33\x00\x20\x49\x3e\x91\x0b\x02\x50\x6c\x33\x3c\xb3\xbe\x20\x1b\xdf\x83\xc5\xce\x48\x44\x61\x3d\x6a\xb2\x8d\x10\x62\x0e\x79\xa7\x27\xe1\x07\xea\x76\xb4\xde\xc4\x73\xa9\x11\x83\xde\xd6\xad\x2c\xce\x85\xe9\x5b\x8d\xef\x39\xb4\x28\xb4\x96\xc9\x37\xfa\x09\xb5\xd2\x1a\x88\xa2\x57\x0d\xd6\x5f\x33\xab\x01\xc0\x27\x7d\x36\xb3\xcd\x6d\x72\x0b\x90\x4e\x9f\xa2\x36\x32\x23\x49\xd4\x66\x66\x9b\x4e\xd8\x38\xd9\x41\x10\x7d\x96\xba\xe8\x8d\x90\xc8\x61\x56\x6d\xbd\xa1\xd1\x18\x8f\xb6\x01\x2f\x6b\xf4\x76\x20\x54\xe9\x6c\x22\xf7\xd1\xad\xb7\x03\x40\x48\x1f\xf6\x8f\x99\x1e\x9e\x90\xe3\xa3\xd9\x4d\x2f\xa6\xaf\x91\xdf\xd8\x47\xdf\x90\xb9\x31\x1f\xfa\x36\x0a\xdc\xc7\xf6\x7e\xd3\x87\x1e\x47\xdd\x08\xe0\xce\x8d\xd8\xd9\xf3\xa5\x6d\x96\xa7\x76\xa8\x5b\x99\x2c\xee\x27\x5f\xe9\x5b\xcc\x51\xc9\xe5\x49\xfb\x83\x9f\x0f\xc3\x6b\x3d\xa8\xc2\xa6\xce\x36\x13\xe4\x70\xd4\xf2\x1b\x72\x92\xb6\xf7\x7d\x9c\xb9\x58\x18\x21\x28\xed\x30\x15\x99\xcc\x44\x7a\x71\x69\x07\x6f\x92\xab\x83\xfa\x3e\xb7\x0d\x35\x48\x56\x6f\x07\x98\xe4\x2e\xfe\xa0\x77\x4a\x9c\x6d\xa3\x80\x9a\xa8\xed\x80\x54\x0e\x8d\x06\x25\x40\x99\x1d\x54\xcc\xa4\x79\xb0\x99\xc5\x1c\x96\x03\x47\x3b\x10\xac\x8d\x20\x82\x05\x88\x43\x63\x9b\x4f\xe2\x67\xdb\x60\xe4\x1d\x5d\x99\x19\xb2\x01\x50\x58\x9c\x7b\x7d\xc9\xa1\xfd\xa4\xfd\x01\xe2\x4d\xff\x9b\x6c\x43\xae\xb1\x0d\x7b\x39\x10\x19\x74\x66\xc9\x8f\x20\x52\x23\xb5\x89\xce\x1e\x66\xa9\x90\x08\x3b\xbc\x1f\xad\xef\x0d\xe3\xfd\x01\x27\x36\x23\x5b\xe4\xd7\xba\x26\xd7\xbd\x91\x03\x72\x06\xf9\x42\x12\x12\xeb\x75\x8d\xf6\x97\xc9\x40\xbe\xf4\x35\x9b\x55\xf8\x57\x0e\xa1\x6c\xa3\xa0\xb7\xc3\xd1\xd4\x36\x3f\x89\x41\x6a\xfd\x84\xf5\x84\x6c\xd9\x9c\x9e\xe7\x03\xfd\x30\xaf\xdf\x73\x60\x31\x68\xbe\xd3\x2b\x32\xeb\x3d\xff\x0a\xb9\xb8\x87\x82\x7f\x00\xbb\xb8\x17\xfe\x08\x7a\x71\xf0\x6b\xc4\x27\xf3\x8b\xfb\x85\x3e\x09\xc1\xf8\x95\x53\xfe\x34\x86\xf1\xc0\x09\x77\x14\xa3\x4a\xfe\x62\x14\xc3\x7e\x2e\xfa\x99\x63\x7c\xe6\x18\x9f\x39\xc6\x67\x8e\xf1\xc9\x38\x06\x6b\xf6\xf3\x0f\x13\x32\xf5\x01\x6b\xf4\xf6\x23\x91\xd1\x7e\x38\xd1\x19\x6f\x90\x1f\x4e\x16\xd6\x27\x4a\x3b\x84\xac\xec\xe0\xd1\x78\x05\xf7\x56\xa9\xc6\x01\x1d\x89\x1b\x72\x52\xfb\x61\x0d\x35\x35\xff\xe8\x8f\xd8\xc9\x01\x5f\xa3\xb9\x82\xaf\x8b\x44\x7c\xf0\xcf\x00\x00\x00\xff\xff\xaf\x9b\x4e\x8e\x00\x30\x00\x00")

func bindataPkgManifestTelemetryZzgeneratedBindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataPkgManifestTelemetryZzgeneratedBindataGo,
		"pkg/manifest/telemetry/zz_generated.bindata.go",
	)
}

func bindataPkgManifestTelemetryZzgeneratedBindataGo() (*asset, error) {
	bytes, err := bindataPkgManifestTelemetryZzgeneratedBindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "pkg/manifest/telemetry/zz_generated.bindata.go",
		size:        28672,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"pkg/manifest/telemetry/config-aws.yaml":         bindataPkgManifestTelemetryConfigawsYaml,
	"pkg/manifest/telemetry/config-azure.yaml":       bindataPkgManifestTelemetryConfigazureYaml,
	"pkg/manifest/telemetry/config-docker.yaml":      bindataPkgManifestTelemetryConfigdockerYaml,
	"pkg/manifest/telemetry/config-vsphere.yaml":     bindataPkgManifestTelemetryConfigvsphereYaml,
	"pkg/manifest/telemetry/zz_generated.bindata.go": bindataPkgManifestTelemetryZzgeneratedBindataGo,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op:   "open",
					Path: name,
					Err:  os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op:   "open",
			Path: name,
			Err:  os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"pkg": {Func: nil, Children: map[string]*bintree{
		"manifest": {Func: nil, Children: map[string]*bintree{
			"telemetry": {Func: nil, Children: map[string]*bintree{
				"config-aws.yaml":         {Func: bindataPkgManifestTelemetryConfigawsYaml, Children: map[string]*bintree{}},
				"config-azure.yaml":       {Func: bindataPkgManifestTelemetryConfigazureYaml, Children: map[string]*bintree{}},
				"config-docker.yaml":      {Func: bindataPkgManifestTelemetryConfigdockerYaml, Children: map[string]*bintree{}},
				"config-vsphere.yaml":     {Func: bindataPkgManifestTelemetryConfigvsphereYaml, Children: map[string]*bintree{}},
				"zz_generated.bindata.go": {Func: bindataPkgManifestTelemetryZzgeneratedBindataGo, Children: map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0o755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
