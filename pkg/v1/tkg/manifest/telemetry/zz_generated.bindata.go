// Code generated by go-bindata. DO NOT EDIT.
// sources:
// pkg/manifest/telemetry/config-aws.yaml
// pkg/manifest/telemetry/config-azure.yaml
// pkg/manifest/telemetry/config-vsphere.yaml
// pkg/manifest/telemetry/zz_generated.bindata.go

package telemetry

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}

func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}

func (fi bindataFileInfo) IsDir() bool {
	return false
}

func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataPkgManifestTelemetryConfigawsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x6d\x6b\xdb\x4c\x10\xfc\xae\x5f\xb1\x18\x42\x20\x3c\xf2\x0b\x0f\x84\x22\xc8\x87\x36\x85\x86\x50\x92\xe0\x84\xd2\x52\x4a\x59\x9d\x36\xf6\xc5\xa7\x3b\x71\xbb\xa7\xd4\xfd\xf5\xe5\x64\x29\xf8\x45\x8e\x9d\x42\x2f\x9f\x72\x3b\x37\x33\xbb\x9a\x75\x9a\xa6\x09\x56\xfa\x0b\x79\xd6\xce\x66\x50\x4f\x92\x85\xb6\x45\x06\x37\x58\x12\x57\xa8\x28\x29\x49\xb0\x40\xc1\x2c\x01\xb0\x58\x52\x06\xb2\x98\xa5\xbc\x64\xa1\x32\x15\x32\x54\x92\xf8\x65\x02\x90\xec\x25\xbb\x27\x5f\x6b\x45\xef\x95\x72\xc1\xca\x1e\xc6\x17\xaa\x94\xb1\x2d\x34\x06\xf6\xe8\x35\x6a\x2b\xfa\x4b\x13\x58\xc8\x4f\x9d\xa1\x0d\x7d\x9f\xa3\x1a\x62\x90\xb9\xf3\xfa\x37\x8a\x76\x76\xb8\x78\xc7\x43\xed\x46\xf5\xe4\xa0\x09\xb5\x22\x4d\x7d\x64\xf5\xc1\x10\x47\x64\x0a\x58\xe9\x4f\xde\x85\x8a\x33\xf8\x3e\x18\xfc\x48\x00\x00\x3c\xb1\x0b\x5e\x51\x73\xc7\xa4\x3c\x09\x0f\xfe\x83\xc1\x4b\x0f\xdc\x02\x6b\xf2\x79\x03\x9a\x91\x44\x80\xd1\x2c\x4d\x69\x8b\xb7\x15\x1f\xfe\x4a\x57\x86\xfb\x74\x5a\x4c\x23\x54\xa2\x9a\x6b\x4b\x05\x55\xc6\x2d\x4b\xb2\xf2\x56\x41\x6d\x1f\x3d\xb2\xf8\xa0\x24\x78\x1a\x1e\xa3\x8f\xcf\xbc\x6e\x01\x9f\xb9\x75\x21\x54\x56\x06\xe5\xed\x4d\x3b\x2b\xde\x99\xca\xa0\x3d\xce\xc1\x22\xe4\x84\x45\xb9\xfe\xee\x80\x66\x7f\x68\x3e\x68\x5b\x68\x3b\xfb\x37\xd9\x49\xf3\x96\x9d\x43\xfe\x44\x4a\xda\x18\xf5\x2e\x46\x74\xbe\x77\x21\x0e\xaf\x44\x94\x9b\xd2\x63\x14\xe8\x06\xfb\x4a\x23\x09\xc0\xee\xfa\x1c\xb1\x0b\x3b\x6b\x9e\xa3\xa8\xf9\xa8\x9e\xe4\x24\xd8\x6d\xfc\xa5\x77\xf6\xda\xe5\x87\x26\x75\xc4\x9e\x03\x18\xcc\xc9\x34\x63\x03\xd8\x8e\xc5\xa8\xb3\xb6\x22\x3f\x3d\xe1\xd3\x84\x2b\x52\x11\xcd\x6a\x4e\x45\x30\x94\xc1\x60\x0c\x67\xa3\x73\x38\x8b\x7f\x83\x04\x40\x39\xab\x82\xf7\x64\xd5\xf2\xce\x19\xad\x96\x19\x4c\xa9\x32\xf1\xd7\x0e\xe0\x11\xb5\xa1\xe2\xda\xe5\x7c\xa5\x59\x9c\x5f\x7e\xd6\xa5\x96\x0c\x26\xe3\x04\xe0\xc9\xe5\x0f\x6d\xbc\x57\x86\x3a\xb1\x78\x64\xa3\xb2\x5d\x6d\xfe\xdf\xf8\xde\x7b\x3e\xf3\xea\xa0\x12\x5d\xd3\x47\xc2\xc2\x68\x4b\xf7\xa4\x9c\x2d\x38\x83\xff\xcf\xc7\xe3\x35\x54\xcc\x3e\x6a\x4b\x9e\xd7\x65\x62\xc0\xfa\xa7\xbd\x7e\x74\x89\xb3\x6e\x66\x9b\x15\xe5\xca\x12\x6d\x91\x6d\x5d\x47\xda\xd1\x6b\x8c\x11\x90\xa6\xec\xac\xcb\x83\x5b\xc6\xe4\xa7\x15\xca\xfc\x62\xd4\x5d\xf5\xe2\x63\x3e\xe2\xa0\x29\x0d\xde\x5c\x9c\x70\x2f\x68\x15\x82\xdd\x2a\xd9\x7a\xdb\x66\xd7\xfb\xd5\xc3\xc3\xdd\xcf\xbb\xe9\xed\xd7\x6f\x3b\x8c\x35\x9a\xd0\xdf\xfa\xfa\xe3\xfb\xbf\x7e\x7d\x73\xfb\xa6\xa7\x9e\x58\xd0\x4b\x97\xc5\x1b\xaa\xc9\x27\x7f\x02\x00\x00\xff\xff\xf6\x15\x3d\x26\x9b\x07\x00\x00")

func bindataPkgManifestTelemetryConfigawsYamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPkgManifestTelemetryConfigawsYaml,
		"pkg/manifest/telemetry/config-aws.yaml",
	)
}

func bindataPkgManifestTelemetryConfigawsYaml() (*asset, error) {
	bytes, err := bindataPkgManifestTelemetryConfigawsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "pkg/manifest/telemetry/config-aws.yaml",
		size:        1947,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPkgManifestTelemetryConfigazureYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5d\x6b\x1b\x3b\x10\x7d\xdf\x5f\x31\x18\x42\x20\x44\xfe\xe0\x42\xb8\x2c\xe4\xe1\xde\x14\x1a\x42\x49\x82\x13\x4a\x4b\x29\x65\x56\x3b\xb1\x15\x6b\xa5\x45\x1a\x2d\x75\x7e\x7d\xd1\x7e\x84\xb5\xbd\x8e\x9d\x42\xe4\x27\x6b\x8e\xce\x39\x9a\x3d\x23\x21\x44\x82\xa5\xfa\x4a\xce\x2b\x6b\x52\xa8\x66\xc9\x4a\x99\x3c\x85\x5b\x2c\xc8\x97\x28\x29\x29\x88\x31\x47\xc6\x34\x01\x30\x58\x50\x0a\xbc\x5a\x08\xbf\xf6\x4c\x85\x60\xd2\x54\x10\xbb\x75\x92\xec\xa5\x7a\x20\x57\x29\x49\xff\x49\x69\x83\xe1\x3d\x7c\xaf\x44\xc2\x63\x5b\xa8\xe5\xdf\x52\x6b\xe8\xaf\x74\xf0\x4c\x6e\x6e\x35\x6d\xe8\xbb\x0c\xe5\x18\x03\x2f\xad\x53\x2f\xc8\xca\x9a\xf1\xea\x5f\x3f\x56\x76\x52\xcd\x0e\x9a\x90\x0d\xa9\x70\x91\xd5\x05\x4d\x3e\x22\x05\x60\xa9\x3e\x3b\x1b\x4a\x9f\xc2\x8f\xd1\xe8\x67\x02\x00\xe0\xc8\xdb\xe0\x24\xd5\x7b\x9e\xa4\x23\xf6\xa3\x73\x18\xbd\xde\xc1\xb7\xc0\x8a\x5c\x56\x83\x16\xc4\x11\xa0\x95\xe7\xba\xb4\xc5\xdb\x8a\x8f\x7f\x8b\xc6\xf0\x90\x4e\x8b\xf9\x50\xea\x73\x18\x15\x28\x97\xca\x50\x4e\xa5\xb6\xeb\x82\x0c\xbf\x57\x50\x99\x27\x87\x9e\x5d\x90\x1c\x1c\x8d\x8f\xd1\xc7\x97\xe0\xa8\x15\xae\x4d\xd4\x1b\x7d\x57\x7d\x04\x53\x51\x6a\xe4\xf7\x37\xd9\x1a\x76\x56\x97\x1a\xcd\x71\xb6\x56\x21\x23\xcc\x8b\xfe\xb9\x03\x9a\xc3\x21\xfd\x5f\x99\x5c\x99\xc5\xc7\x64\x55\x64\x2d\xbb\x0f\xd9\x33\x49\x6e\x63\x3b\x38\x88\xd1\xf9\xde\x01\x3c\x3c\x82\x51\x6e\x4e\x4f\x51\xa0\x6b\xec\x1b\x17\x49\x00\x76\xc7\xf5\x88\xd9\xdb\x79\x56\x32\x64\xb9\x9c\x54\xb3\x8c\x18\xbb\x17\xe6\xca\x59\x73\x63\xb3\x43\x9d\x3a\xe2\x5d\x01\xd0\x98\x91\xae\xdb\x06\xb0\x1d\x8b\x49\x67\xad\x21\x3f\x3d\xf1\xa7\x89\x2f\x49\x46\xb4\x97\x4b\xca\x83\xa6\x14\x46\x53\x38\x9b\x5c\xc0\x59\xfc\x8d\x12\x00\x69\x8d\x0c\xce\x91\x91\xeb\x7b\xab\x95\x5c\xa7\x30\xa7\x52\xc7\xb7\x15\xe0\x09\x95\xa6\xfc\xc6\x66\xfe\x5a\x79\xb6\x6e\xfd\x45\x15\x8a\x53\x98\x4d\x13\x80\x67\x9b\x3d\xb6\xf1\x6e\x0c\x75\x62\x71\xf1\x46\x65\xbb\x5a\xff\xdf\xf8\xde\x7b\x3e\x73\xb3\x50\xb2\xaa\xe8\x13\x61\xae\x95\xa1\x07\x92\xd6\xe4\x3e\x85\x7f\x2e\xa6\xd3\x1e\x2a\x66\x1f\x95\x21\xe7\xfb\x32\x31\x60\xc3\xdd\xee\x2f\x55\xe0\xa2\xeb\xd9\x66\x45\xda\xa2\x40\x93\xa7\x5b\xdb\x91\x76\xf2\x16\x63\x04\x08\xe1\xad\xb1\x59\xb0\xeb\x98\x7c\x51\x22\x2f\x2f\x27\xdd\xd6\x20\x3e\xe6\x23\x36\x9a\x44\x70\xfa\xf2\xc4\x0f\x82\x9a\x10\xec\x56\xc9\x54\xdb\x36\xbb\xbb\x5f\x3f\x3e\xde\xff\xba\x9f\xdf\x7d\xfb\xbe\xc3\x58\xa1\x0e\xc3\x57\xef\x1f\x7e\xf8\xeb\xd3\xb7\x77\xef\x3a\xea\xc8\x33\x3a\xee\xb2\x78\x4b\x15\xb9\xe4\x4f\x00\x00\x00\xff\xff\x7e\xaf\x00\xd5\x09\x08\x00\x00")

func bindataPkgManifestTelemetryConfigazureYamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPkgManifestTelemetryConfigazureYaml,
		"pkg/manifest/telemetry/config-azure.yaml",
	)
}

func bindataPkgManifestTelemetryConfigazureYaml() (*asset, error) {
	bytes, err := bindataPkgManifestTelemetryConfigazureYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "pkg/manifest/telemetry/config-azure.yaml",
		size:        2057,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPkgManifestTelemetryConfigvsphereYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5b\x6b\x1b\x3d\x10\x7d\xdf\x5f\x31\x18\x42\x20\x44\xbe\xf0\x41\xf8\x58\xc8\x43\x9b\x42\x43\x28\x49\x70\x42\x69\x29\xa5\xcc\x6a\x27\xb6\x62\xad\xb4\x48\xa3\xa5\xdb\x5f\x5f\xb4\x97\xe0\xcb\x3a\x76\x0a\x91\x9f\xac\x39\x3a\xe7\x68\xf6\x8c\x84\x10\x09\x96\xea\x2b\x39\xaf\xac\x49\xa1\x9a\x25\x2b\x65\xf2\x14\x6e\xb1\x20\x5f\xa2\xa4\xa4\x20\xc6\x1c\x19\xd3\x04\xc0\x60\x41\x29\xf0\x6a\x21\x7c\xed\x99\x0a\xc1\xa4\xa9\x20\x76\x75\x92\xec\xa5\x7a\x20\x57\x29\x49\x1f\xa4\xb4\xc1\xf0\x1e\xbe\x17\x22\xe1\xb1\x2b\x34\xf2\xaf\xa9\xb5\xf4\x57\x3a\x78\x26\x37\xb7\x9a\x36\xf4\x5d\x86\x72\x8c\x81\x97\xd6\xa9\x3f\xc8\xca\x9a\xf1\xea\x7f\x3f\x56\x76\x52\xcd\x0e\x9a\x90\x2d\xa9\x70\x91\xd5\x05\x4d\x3e\x22\x05\x60\xa9\x3e\x3b\x1b\x4a\x9f\xc2\x8f\xd1\xe8\x67\x02\x00\xe0\xc8\xdb\xe0\x24\x35\x7b\x9e\xa4\x23\xf6\xa3\x73\x18\xbd\xdc\xc1\x77\xc0\x8a\x5c\xd6\x80\x16\xc4\x11\xa0\x95\xe7\xa6\xb4\xc5\xdb\x89\x8f\x7f\x8b\xd6\xf0\x90\x4e\x87\x79\x57\xea\x73\x18\x15\x28\x97\xca\x50\x4e\xa5\xb6\x75\x41\x86\xdf\x2a\xa8\xcc\x93\x43\xcf\x2e\x48\x0e\x8e\xc6\xc7\xe8\x57\xbe\x5c\x92\xa3\x4e\xba\xb1\xd1\x6d\xad\x3b\xdb\x44\x31\x15\xa5\x46\x7e\x7b\xab\xad\x61\x67\x75\xa9\xd1\x1c\x67\x6e\x15\x32\xc2\xbc\x58\x3f\x77\x40\x73\x38\xaa\x1f\x95\xc9\x95\x59\xbc\x4f\x62\x45\xd6\xb1\xfb\x90\x3d\x93\xe4\x2e\xbc\x83\xe3\x18\x9d\xef\x1d\xc3\xc3\x83\x18\xe5\xe6\xf4\x14\x05\xfa\xc6\xbe\x72\x91\x04\x60\x77\x68\x8f\x98\xc0\x9d\xc7\x25\x43\x96\xcb\x49\x35\xcb\x88\xb1\x7f\x67\xae\x9c\x35\x37\x36\x3b\xd4\xa9\x23\x5e\x17\x00\x8d\x19\xe9\xa6\x6d\x00\xdb\xb1\x98\xf4\xd6\x5a\xf2\xd3\x13\x7f\x9a\xf8\x92\x64\x44\x7b\xb9\xa4\x3c\x68\x4a\x61\x34\x85\xb3\xc9\x05\x9c\xc5\xdf\x28\x01\x90\xd6\xc8\xe0\x1c\x19\x59\xdf\x5b\xad\x64\x9d\xc2\x9c\x4a\x1d\x5f\x58\x80\x27\x54\x9a\xf2\x1b\x9b\xf9\x6b\xe5\xd9\xba\xfa\x8b\x2a\x14\xa7\x30\x9b\x26\x00\xcf\x36\x7b\xec\xe2\xdd\x1a\xea\xc5\xe2\xe2\x8d\xca\x76\xb5\xf9\xbf\xf1\xbd\xf7\x7c\xe6\x76\xa1\x64\x55\xd1\x27\xc2\x5c\x2b\x43\x0f\x24\xad\xc9\x7d\x0a\xff\x5d\x4c\xa7\x6b\xa8\x98\x7d\x54\x86\x9c\x5f\x97\x89\x01\x1b\xee\xf6\xfa\x52\x05\x2e\xfa\x9e\x6d\x56\xa4\x2d\x0a\x34\x79\xba\xb5\x1d\x69\x27\xaf\x31\x46\x80\x10\xde\x1a\x9b\x05\x5b\xc7\xe4\x8b\x12\x79\x79\x39\xe9\xb7\x06\xf1\x31\x1f\xb1\xd1\x24\x82\xd3\x97\x27\x7e\x10\xd4\x86\x60\xb7\x4a\xa6\xda\xb6\xd9\xdf\xfd\xfa\xf1\xf1\xfe\xd7\xfd\xfc\xee\xdb\xf7\x1d\xc6\x0a\x75\x18\xbe\xfa\xfa\xe1\x87\x7f\x3e\x7d\x7b\xf7\xa6\xa3\x8e\x3c\xa3\xe3\x3e\x8b\xb7\x54\x91\x4b\xfe\x06\x00\x00\xff\xff\x06\xcb\x68\x3f\x0f\x08\x00\x00")

func bindataPkgManifestTelemetryConfigvsphereYamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPkgManifestTelemetryConfigvsphereYaml,
		"pkg/manifest/telemetry/config-vsphere.yaml",
	)
}

func bindataPkgManifestTelemetryConfigvsphereYaml() (*asset, error) {
	bytes, err := bindataPkgManifestTelemetryConfigvsphereYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "pkg/manifest/telemetry/config-vsphere.yaml",
		size:        2063,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPkgManifestTelemetryZzgeneratedBindataGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x99\x5b\x6f\x23\xc7\xd1\x86\xaf\x39\xbf\x62\x3e\x01\x36\xc8\x0f\xb2\x34\xe7\x83\x80\xbd\xf1\xee\x06\xf0\x85\xed\x20\xd9\x5c\x04\xe9\xc0\xe8\x99\xe9\x91\x89\x95\x48\x85\xa4\xec\x5e\x19\xfb\xdf\x83\xa7\xaa\x28\xd1\x9b\xcd\x1e\x60\x27\x40\x16\xe0\x92\x73\xe8\xea\x3a\xbc\x55\xf5\x56\xeb\xf2\x32\x7d\xbe\x9d\x42\x7a\x1d\x36\x61\xe7\x0f\x61\x4a\x87\x37\xe9\xf5\xf6\xab\x61\xbd\x99\xfc\xc1\x5f\xa4\x2f\xbe\x4f\xbf\xfb\xfe\x55\xfa\xf2\xc5\x37\xaf\x2e\x92\xcb\xcb\x74\xbf\xbd\xdf\x8d\x61\x7f\xc5\xef\xbb\xd7\xd7\x97\xb7\x7e\xb3\x9e\xc3\xfe\x70\x79\x08\x37\xe1\x36\x1c\x76\x6f\x2e\xc7\xed\x66\x5e\x5f\x7f\xe5\x7f\xde\x5f\xbc\xf1\xb7\x37\x9f\xf0\xe6\xc3\xfd\x2e\x7c\xe2\xbb\x3f\xed\xef\x7e\x0c\x1f\x7f\xfb\xe1\xe1\x87\x47\x93\x2e\x8e\xc6\x5c\x6f\x93\xe4\xce\x8f\xaf\xfd\x75\x48\x1f\x5f\x4d\x92\x64\x7d\x7b\xb7\xdd\x1d\xd2\x65\xb2\x38\x1b\xde\x1c\xc2\xfe\x2c\x59\x9c\x8d\xdb\xdb\xbb\x5d\xd8\xef\x2f\xaf\x1f\xd6\x77\xdc\x98\x6f\x0f\x7c\xad\xb7\xfa\xff\xe5\x7a\x7b\x7f\x58\xdf\x70\xb1\x95\x05\x77\xfe\xf0\xe3\xe5\xbc\xbe\x09\xfc\xe0\xc6\xfe\xb0\x5b\x6f\xae\xe5\xd9\x61\x7d\x1b\xce\x92\x55\x92\xcc\xf7\x9b\x31\x35\x75\xfe\x14\xfc\xb4\xe4\x47\xfa\xb7\xbf\xb3\xed\x79\xba\xf1\xb7\x21\xd5\x65\xab\x74\x79\xbc\x1b\x76\xbb\xed\x6e\x95\xfe\x92\x2c\xae\x1f\xe4\x2a\xbd\x7a\x96\xa2\xd5\xc5\x77\xe1\x67\x84\x84\xdd\x52\xd4\xe6\xfa\xeb\xfb\x79\x0e\x3b\x11\xbb\x5a\x25\x8b\xf5\x2c\x0b\xfe\xef\x59\xba\x59\xdf\x20\x62\xb1\x0b\x87\xfb\xdd\x86\xcb\xf3\x74\xbe\x3d\x5c\xbc\x44\xfa\xbc\x3c\x43\x50\xfa\xc5\x3f\xae\xd2\x2f\x7e\x3a\x53\x4d\x64\xaf\x55\xb2\x78\x9b\x24\x8b\x9f\xfc\x2e\x1d\xee\xe7\x54\xf7\xd1\x4d\x92\xc5\x0f\xaa\xce\xb3\x74\xbd\xbd\x78\xbe\xbd\x7b\xb3\xfc\x72\xb8\x9f\xcf\xd3\xeb\x87\x55\xb2\x18\x6f\x5e\x1e\x35\xbd\x78\x7e\xb3\xdd\x87\xe5\x2a\xf9\xbd\xf4\x41\x8c\xca\xff\x37\x82\xc2\x6e\xa7\x7a\xdb\xcd\xe1\x7e\xbe\xf8\x1a\xd5\x97\xab\x73\xde\x48\xde\x26\x49\x72\x78\x73\x17\x52\xbf\xdf\x87\x03\x3e\xbf\x1f\x0f\x88\x11\x03\x2d\x20\xc9\x62\xbd\x99\xb7\x69\x4a\x50\xbf\xd9\xcc\xdb\x97\x91\x75\xb2\xec\xe9\x56\xba\xde\x1c\xc2\x6e\xf6\x63\x60\xf9\x76\x7f\xf1\x07\x7b\x94\x2c\xbe\x7d\x51\x3f\xff\x31\x8c\xaf\xf7\xf7\xb7\xcb\x95\xc5\xf5\x51\x82\x81\xe0\xf8\xf6\x89\x0a\x82\x02\xfb\x67\x8b\x16\xfb\xf5\xc3\xe3\xbd\xf5\xe6\xd0\x54\xc9\xe2\x96\xb4\xb5\x7f\xb6\xed\xb7\xdb\x29\xc8\x83\x57\x6b\x13\x01\xf0\x2e\xb8\x4a\x16\xb7\x53\x3d\x9a\x36\x27\xba\x08\x20\x97\xf3\xfa\x5d\x7d\x56\xe9\x77\xfe\x36\x3c\xaa\x8d\x5e\xe6\xcb\x79\x7d\x81\x86\xc9\xdb\x0f\xac\xfd\xf3\xfa\x81\xb5\xa2\xe9\xaf\x97\x62\xc8\x07\x97\x62\xc3\x72\x75\x6a\xd1\xaf\x05\x60\xf6\xc7\x04\x60\xf0\x72\xf5\x64\xfc\xbf\x48\x10\x8f\x7c\x50\xc8\x7b\x42\xf7\x8e\x94\x27\x77\x7e\x50\xd2\x37\xfb\x17\xeb\xdd\x72\x95\x0e\xdb\xed\xcd\xa9\x04\x7f\xb3\xff\x88\x0f\xdf\xec\xd5\x85\x8a\xae\x5f\xde\x9e\xac\x36\x08\x93\x95\x3f\xd8\xc2\x3f\xbe\xbe\xfe\xd6\xca\xe0\xab\x63\x69\x7b\x2e\x25\xd3\xff\xbc\xff\xab\xbf\xbd\x49\x9f\x19\xac\x97\x67\x2e\xe6\xb3\x8b\xdd\xe0\x62\xd6\xb9\x98\x65\xef\xff\xcc\xb3\x8b\x43\xe5\x62\x5d\xb9\xd8\x4c\x2e\x36\x83\x8b\xd3\xe0\x62\x35\xba\x98\xf3\x7c\x74\xd1\x07\x17\x6b\xde\xcb\x5d\xcc\x3b\x17\xab\xc2\xc5\x22\x73\xb1\x1c\x5d\x9c\x0b\x17\x33\xf6\x60\xaf\xca\xc5\xa2\x70\x71\xec\x5c\xec\x5a\x17\xcb\xc6\xc5\xae\x76\xb1\x6b\x5c\xac\x33\x17\xfb\xc2\xc5\x90\xe9\x7b\x53\xe1\x62\x5d\xb8\x58\x79\x17\xeb\xde\xc5\x7e\xd2\xf7\xe7\xc6\xc5\xb1\x76\xd1\xb3\x7e\x70\xb1\xcd\x5d\x1c\x06\xbd\x9e\x2a\x17\xe7\xc9\xc5\xb9\x76\x31\xd4\x2e\x36\xec\xd7\xbb\x38\xa3\x13\xfb\x04\x95\x23\xfa\xcd\x2e\xf6\xb3\x8b\x6d\xa1\x72\x4a\xe4\x95\x2a\xab\xf7\x2e\xb6\xb5\x7e\xfb\xc6\xc5\xac\x77\xb1\x66\x6f\xaf\xb6\xb4\xbd\x8b\x13\x7a\x04\x17\x1b\xd3\xbd\x9a\x55\x7f\xec\x19\x1a\xdd\x2f\x6b\x54\x6e\xdd\xb9\x98\x63\x4f\xeb\xa2\xef\x5c\x2c\x3a\xd5\xab\xea\x5d\x1c\x58\x9b\xb9\x38\xe6\x2e\x16\xa3\x8b\x59\xae\xf7\x58\x83\xfd\xc8\x18\x0a\x17\xfb\xce\x45\x8f\xec\x51\xed\xf2\xb9\x8b\x65\xe1\x62\x5e\xeb\x37\xf1\x61\x7f\x6c\x6d\xd8\x9b\x35\x99\x8b\x61\x74\xb1\xa8\xd5\xae\xa2\xd5\x38\x11\x43\xf4\x0b\xe8\x5c\xab\x0f\xd8\x7f\xf4\x2e\xe6\xc1\xc5\xb1\x71\x31\x47\x57\xef\x62\x5f\x69\x5c\x0b\xfc\x5f\xa9\x3e\xc4\x20\x74\x2e\x96\xf8\xd8\xbb\x58\x0c\xea\x9b\x6a\x70\x31\x2f\x55\x77\x62\x2c\x3e\x99\x54\xd7\x6c\x72\xb1\x9d\xd4\xe7\xbe\x74\x31\xf7\x2e\x36\xa6\xe3\x40\x8c\x4a\x95\x81\xbf\x3a\xfc\xdf\xe8\x67\xe8\x5c\x6c\x91\xd7\xba\x58\x95\x2e\x06\xe2\xd7\x58\x8c\xf1\x43\xa6\xf1\x19\x6a\xc5\x56\x65\xfb\xe0\x23\xde\xc1\x2e\x70\x5a\xb5\x7a\x2f\xf3\xaa\x5f\xe8\x55\xbf\x29\x18\x06\xbd\xc6\x1f\xff\x95\x41\x71\x0c\xb6\xab\x93\xdc\x00\xcf\xf8\x02\x0c\xd4\x60\x3e\x77\xb1\x2d\x55\x37\x5f\xe9\x73\x74\x01\xeb\x33\x72\x4b\xdd\xbf\x32\xfc\x4f\xa3\xc6\x05\xff\x93\x17\xe0\x28\x2b\x15\x67\x3d\xef\x55\x2e\x76\x99\x8b\x93\x61\x01\x5b\x9a\x5e\x73\x74\x68\x35\xd6\xb9\xc9\x96\xbc\x68\x35\x77\x66\x30\x49\x8e\x7a\xcd\xcb\xa2\x54\x3c\xf8\x42\x65\x4b\xbc\xd1\xa1\x76\xb1\xae\x35\xbe\xc4\x93\x7b\x60\x0b\x5d\xc0\x77\x95\x6b\x8e\xb3\x47\x39\xd9\xb3\x4e\x7d\x5c\x54\x1a\x87\xdc\x30\x42\x0c\xbb\xd9\xc5\x71\x36\x4c\x06\xc5\x2e\xf1\x25\x9e\xe4\x4f\x91\xab\x1e\xc8\x06\x37\xe4\xa4\xc4\x6f\xd2\x9c\x03\x37\xf8\xbf\xef\x15\x7b\xec\xc3\xbe\xe4\x95\xe4\x43\xa1\x31\xa6\x1e\x80\x57\xc1\x49\x70\x31\x04\xf5\x13\xb9\xd7\x82\x67\x8b\x19\xdf\xf5\x60\xd7\x83\xfa\x05\x3c\x4d\x96\x6b\x60\xac\x6f\xac\x06\x94\xe6\xc7\x4a\x7d\x39\x79\x8b\x39\x7a\x07\xc5\x18\x3e\x1d\x82\x8b\x6d\xab\xb6\x64\xd8\x3d\xeb\x1a\xf2\xa2\x1f\xb4\x4e\x35\xe0\xb9\xd2\x9c\xc8\x2c\x1e\xc8\x24\x0e\xe0\x61\xcc\x54\x67\xf0\x9d\x9f\x60\x08\x1d\x89\x4d\x6f\xfe\xa4\x36\xcc\xbd\x7e\x73\x0f\xdb\xf1\xfb\xd4\x69\x5c\xa4\xd6\xd6\xaa\x0f\x39\x88\xce\xf8\x94\x5a\x5a\x34\xea\xf3\xb1\xd2\xb5\xe0\x0a\x7b\xc6\xd1\xc5\xb1\xd7\xdc\x45\x4f\xee\x23\x8f\x5a\x28\x75\xb4\x73\x71\x28\xb5\x66\xe1\xef\xd2\x62\x1f\x72\x17\xa7\xd2\x6a\xf6\xa0\xb5\x28\xa7\x46\x4c\x9a\xf3\x55\xd0\x98\x94\x99\xfa\x82\x78\x35\xe4\x09\x58\x68\xd5\x1e\x72\xa3\xec\x14\xbf\xc4\x89\x7c\xc8\x2a\xad\x77\x25\x76\x0e\x2e\x76\x60\xcc\x72\x73\xaa\x15\x8b\xc4\x3f\xe7\xf9\xa4\xf1\xe2\x37\xb8\xf6\xbd\xd6\xba\x19\xdd\x5a\x8d\x07\xfd\x02\xbd\xc8\x7f\xea\x4c\x28\x9e\xfc\xd2\x9a\xbf\xa4\x7f\x8c\x5a\xfb\xda\xa0\xb5\x9b\xfb\xc8\x46\x5f\x7c\x17\x4c\x37\xe4\xe1\x2f\xd6\x93\xb3\xf8\x1d\x7c\x1f\x73\xad\xf4\x1a\x3f\x72\x41\xea\x70\xa9\x79\x52\x4f\x16\x23\xe4\xcf\x9a\x37\x60\xbb\x1d\x14\x9b\x60\x2f\x18\xc6\x73\x7b\x1f\xff\x52\x97\xc6\x42\x3f\xe0\x96\x9c\x9c\xad\x9e\xa0\xb3\xd4\xdd\x4e\x7d\x37\x5b\xbe\x51\x6f\xd0\x97\xfa\x4b\x7e\x11\x63\xc1\xbf\xd5\x60\xe2\x8f\x7f\xe8\x03\xd4\x58\xf0\x07\xf6\xe8\x91\xc3\xa4\x3e\x00\xdb\x5d\xaf\xb1\x6f\xac\x8f\x81\xe7\xdc\x7a\xa7\xf4\x82\x42\x6d\xea\xad\x2e\xa0\x33\xfa\xe2\x5f\x6a\x14\xd8\xed\x46\xf5\x3f\x75\x9c\x5e\x49\xbf\xf1\x60\x6e\x50\x9d\xc9\x47\xea\x8d\xd4\x6a\xab\x61\xc8\x06\xcb\xe8\x46\xcf\xae\x8f\x3d\xdb\x72\x09\x5b\xf8\x2d\x75\xa7\xd7\xde\x81\x2f\xeb\x51\x7d\xd2\x66\xda\xbf\xf1\x17\xf2\xc0\xd0\x34\xb9\x58\x78\xcd\xf5\xd6\x2b\x47\xc1\x26\xfc\x40\x3e\x82\xad\xb1\xd4\x0f\xef\x4a\xdd\x1a\xb4\x0f\x50\x93\xc4\x5f\xb3\xe6\x24\x36\x95\xd6\xff\xa7\xcc\xe2\xe9\xf5\x83\xdf\x91\x37\x18\x96\xe8\x35\xad\xdd\xc3\x7e\x6c\xc4\xff\xf4\x18\xd6\x4a\x3c\x5a\xcd\xb5\x7c\xd0\x9e\x0a\xbe\xe8\xc5\xe4\x04\xfd\xe0\x94\x6b\xc9\xa7\xb1\xbe\x3e\x29\x36\x89\x4b\xd6\x1e\xdf\x3b\x7b\x67\x82\xfc\x28\xe7\xb3\x99\xe7\x7d\xb3\xe4\x71\x32\x3a\x99\x45\x93\xc5\xe2\x93\xd9\xe4\x79\xb2\x58\x9c\x7d\xda\xfc\x7f\x76\x9e\x2c\x56\x32\x71\x7d\x9e\xf2\xe8\xfd\xff\x32\x9f\x9d\xea\x2d\x03\xda\xe3\x18\xfc\x99\x8e\xf8\xd8\x00\xfa\x38\x37\xca\xe0\xf7\x24\xff\xc8\xca\x79\x9f\xe1\xe7\x2a\xfd\x0c\xdb\x65\x78\xbb\x4a\xf3\xbe\x6a\xb9\x3a\x19\x1c\xae\xd2\x33\x79\x81\x99\xe6\xea\x74\xe4\x59\x56\x45\xb6\xb2\x27\xcc\x2a\x57\x3a\xcb\xfc\x65\xb3\x8e\xcb\xfc\x3c\x95\x67\xa8\xe9\xd1\xf1\x4b\xf1\xd1\x2f\xe2\x98\xab\xd4\xfc\x83\x01\x57\xf2\xff\xc9\x18\xec\xcf\x3f\x73\x72\x78\xb8\xdf\x85\xdf\x3c\x3b\xd4\x36\x3b\xe4\xd6\xf7\xe0\x64\xe4\x0e\xb9\x45\x5d\x2e\xdf\x99\x1d\xe8\xb1\xb3\xd5\x77\xee\xc1\x03\xe1\x44\xd4\x11\xe9\x4d\x41\x7b\x2e\x7c\x84\xe7\xf4\x77\xea\x00\xfc\xb3\xb2\x3a\x48\xed\xa0\x06\xc2\x3f\xd8\x53\xe6\x93\x5a\xf5\xa0\xfe\xd3\xbf\x58\x4f\x8d\xa5\x77\x1e\xf3\x99\xda\xc6\x6f\x7a\x1f\x7d\x85\x9a\x79\x3a\x3b\x48\x5f\x6e\xad\xfe\x05\xed\x57\xf4\x33\xea\x85\xe4\x6c\xa9\x7c\x41\xf8\x5c\xa1\x7b\x09\x3f\xf6\xfa\x6e\x61\x7d\x9f\x9e\x4a\xff\xa5\x4e\x51\x13\x78\x0e\x17\x82\x47\xc2\x49\xa9\x9d\xd8\x0c\x97\xa6\x86\x1c\xe7\x06\x3e\x5d\xa7\x3e\x93\xfe\xd1\x18\x37\xcf\xb5\x1f\xcb\xec\x90\x29\xd7\x95\xde\xe5\x35\x4e\x83\xd5\x96\xca\xe4\xd3\xaf\x27\x9b\x1d\x88\x07\xf5\x50\xe6\x9e\xc2\xea\x78\xad\xb5\x94\x78\xd0\xff\x8e\x33\x0b\x71\xe5\x5b\xb8\x69\xa9\xf1\xc0\x6e\xe9\xb7\xc6\x8f\x46\xab\xe5\xd8\x80\x8d\xf4\x14\x89\xb5\xf1\x5f\xb8\x12\xef\xd2\x87\xe6\x4c\x75\x92\x3e\x14\x6c\xae\x98\xf4\x1d\x74\xa2\x47\xb3\x1e\x7c\xc0\x5f\xa8\xfd\x70\x83\xda\x7e\xe3\x1f\x7a\x0a\xfe\x87\x1b\xd0\x67\x05\x53\xb3\xc6\x9e\x39\x82\x7d\xe1\x2e\x70\x06\xe1\xdb\x99\xf6\x15\x38\x05\xfd\x84\x1e\x47\x8f\x80\x23\x0b\x3f\x0d\xca\x87\x32\xf3\x93\x70\x8f\x60\xd8\x35\x7e\x07\xd7\xc5\x4e\x78\x30\x98\x41\x5f\xb8\xcf\xb1\xa6\x0b\x97\xe8\xb4\x17\x05\xe3\xd0\xec\xd1\x1e\x39\x5f\xa5\x58\x21\x26\x47\xbe\x84\x8d\x83\xf5\x3b\x38\x15\xbc\x9f\xfe\xcd\x7c\x42\xff\xc3\x1e\x7c\x9e\x37\xca\xf5\xe8\xbd\xf4\x49\xe6\xb8\x40\x7f\xf7\x9a\x73\xf4\x1b\xf6\x65\x1d\xfa\xb5\x96\xaf\x60\x05\x7f\x63\x3f\x1c\x8e\x7b\x70\x4e\xf0\x82\xdf\x8e\x3a\x90\x27\x85\xe1\x0e\xdf\xd6\xf6\xbe\xb7\xf9\x36\x18\x77\x23\x36\xe0\x0a\x7c\xc8\x0c\x6f\xbd\xad\x3b\xf6\xc1\x49\xf7\x82\xf7\xf2\xe9\xa6\x27\x7f\xc1\x63\x90\x8f\x6f\xbc\xed\xe9\x83\xfa\x1f\x5e\x80\x9f\xc9\x47\x64\xf3\x0d\x3f\x23\xe6\xcc\x5d\x70\x1d\xf2\x10\xae\x74\xe4\xf8\xb9\xcd\x8d\xf8\x08\xb9\x5c\x13\x73\x39\x23\xb0\xfb\xe4\x25\x3e\x87\x33\x89\xed\x41\xe7\x8a\xe3\x1c\x36\x5a\xee\xce\x93\x62\x08\x7b\x84\x77\xf4\xea\xd3\xd1\xb8\x6a\x7d\x3c\x5f\x98\x0c\xa3\xb3\xea\xc0\x0c\x29\xb9\x11\x8c\xcb\x0c\xc6\xdf\x3a\xb5\x19\x5f\x4f\x36\x2b\x91\xe7\x92\xeb\x85\xd9\x14\x8c\x57\xcf\x7a\x4d\x5c\x25\x57\x46\xf5\x05\x33\x39\xb2\xc1\x16\x76\xa2\x0b\xbc\x49\x64\xf7\x1a\xef\xd6\xce\x2a\xe0\xc9\xe8\x37\x1c\xb9\x6f\xa5\x5c\x4f\xf8\x9a\xe5\x15\xf2\x42\x63\xf1\xed\x35\xf6\xe8\xcc\x7b\xcc\x47\x72\xe6\xe2\x95\x8b\x11\x47\x74\x86\xd3\xf4\x9d\xe6\x0b\xb1\x62\x4f\x39\xa3\x20\xc6\x93\xfa\x54\xec\x6f\x35\x47\xf1\xe5\x71\xa6\x20\x37\xe1\x47\xf0\xce\xc2\x6a\x08\x73\x16\x78\x25\x5e\xd4\x6c\x74\x01\xdf\x70\x29\xea\x3b\xcf\x6b\x9b\x23\xe0\x41\xc4\x82\x7c\x40\xdf\xd9\xf0\x94\x5b\xbe\x49\x3d\x9a\x14\x93\xd4\x59\x74\xe4\x03\x56\xc9\x39\xe6\x0d\xf2\x04\x19\x72\x7e\x94\xe9\xb7\xd4\x86\xf6\x69\xc6\x0e\x76\xa6\xc0\xbb\xe8\xc1\x3e\xe4\x0d\x75\x1a\xbc\x50\x4f\xf1\x33\x98\x22\x66\x60\x45\x7a\x89\x9d\x23\xa0\x2f\x3e\x02\xc7\xf4\x23\x99\x55\x5b\xd5\x5f\xe6\xea\x46\x7d\x21\x33\xf3\xa8\x35\x17\x2e\x0c\x4e\xb9\x8f\xcd\x8d\x9d\xd9\xb0\x17\xf5\xf6\x7d\x33\x45\x6b\xb1\x22\xef\x98\x41\xe0\x96\xd4\x20\xf6\x6c\x2c\x3e\xbd\xcd\x45\xf0\x47\xea\xfa\x64\x5c\xbc\xb4\x73\x0f\xea\x02\xf3\x2e\x76\x32\x8f\x30\xdb\xc3\xa3\xb1\x35\xb7\xf3\x21\x62\x18\x8c\x47\x83\xab\xd2\x66\xbd\x23\x97\x66\xb6\x25\x9e\xb5\xf9\xce\x17\xea\x73\x30\xd9\xd8\x59\x18\x33\x03\xf7\x99\xfd\xfa\xd2\xfc\x6e\x67\x89\xc4\x08\x3c\x33\xfb\x51\xd7\x1a\x9b\xc5\xe8\x59\xf4\x16\x70\x44\xef\xae\xed\xbc\x0c\xd9\xf8\x97\x7e\x53\xdb\x39\x01\xfb\xcb\xa7\x55\x9d\xb0\x53\xce\x20\x83\x62\x9c\x9c\x2f\x1b\xcd\x71\xfa\x53\x6b\x33\x91\xcc\x9b\x95\x9d\x4f\xda\x79\x49\x6e\xe7\x66\xb5\xf5\x65\x72\x07\x3d\x59\x4f\x4c\x24\x2e\xd6\x5f\x90\x4f\x4c\x84\xeb\x58\x4f\x20\x56\xd4\x2b\x99\x13\x82\xfa\x89\x9e\xec\xed\x0c\x41\xae\x5b\x3d\x7f\xcb\x6d\x8e\x20\xb6\xe2\xb3\x52\x71\xd8\xda\x73\xc9\x3f\xaf\x7d\x84\xda\x22\xd7\x41\xe3\xdd\xda\xbc\x98\xdb\xd9\x08\x71\xa5\x76\xbc\xcb\xc1\x66\xdb\xc3\xdb\x33\xe9\x73\xfd\x29\x77\xfb\x8c\x99\xe2\xc8\x06\xff\x13\x53\xc5\x51\xf6\xa7\xcc\x15\x8f\x7f\x2d\xfc\xfc\xc9\xe2\xb8\xcd\xef\x33\x5b\xbc\xe3\x90\xff\xde\x74\xf1\x2b\x0f\xd8\x7c\x51\x64\xf5\xff\xda\x7c\x61\x7f\xcb\xfd\xed\x13\xc6\x70\x32\x61\x4c\x9f\x36\x61\x90\x9d\xc2\x3e\x73\xcd\xc0\xc7\x93\xeb\x52\xab\xb5\x4c\x16\xa5\x32\xa1\xca\x98\x22\xf7\x1a\x63\xe1\xb0\x21\x98\x84\x9c\x82\xb7\xd6\x11\x0a\xab\x58\x95\x9e\x1e\xcb\xc9\x9e\xb1\xb1\xda\x74\x39\x76\x3c\x61\x88\x83\x66\x35\x15\x30\xb3\x93\x60\x39\x25\x1f\x75\xaa\x90\x8c\x6f\xf5\xb4\x03\xa6\x48\x07\xef\x8c\xb1\x4b\x97\x6a\xb4\x42\x30\x55\xc8\xa9\x9a\xad\x45\x5f\x2a\x0e\x15\xad\xa8\x6d\xea\xb0\x13\x36\x3a\x2b\xdd\x47\x4e\xf6\x33\xf7\xcf\x00\x00\x00\xff\xff\x55\x27\xa6\x26\x00\x20\x00\x00")

func bindataPkgManifestTelemetryZzgeneratedBindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataPkgManifestTelemetryZzgeneratedBindataGo,
		"pkg/manifest/telemetry/zz_generated.bindata.go",
	)
}

func bindataPkgManifestTelemetryZzgeneratedBindataGo() (*asset, error) {
	bytes, err := bindataPkgManifestTelemetryZzgeneratedBindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "pkg/manifest/telemetry/zz_generated.bindata.go",
		size:        20480,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"pkg/manifest/telemetry/config-aws.yaml":         bindataPkgManifestTelemetryConfigawsYaml,
	"pkg/manifest/telemetry/config-azure.yaml":       bindataPkgManifestTelemetryConfigazureYaml,
	"pkg/manifest/telemetry/config-vsphere.yaml":     bindataPkgManifestTelemetryConfigvsphereYaml,
	"pkg/manifest/telemetry/zz_generated.bindata.go": bindataPkgManifestTelemetryZzgeneratedBindataGo,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op:   "open",
					Path: name,
					Err:  os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op:   "open",
			Path: name,
			Err:  os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"pkg": {Func: nil, Children: map[string]*bintree{
		"manifest": {Func: nil, Children: map[string]*bintree{
			"telemetry": {Func: nil, Children: map[string]*bintree{
				"config-aws.yaml":         {Func: bindataPkgManifestTelemetryConfigawsYaml, Children: map[string]*bintree{}},
				"config-azure.yaml":       {Func: bindataPkgManifestTelemetryConfigazureYaml, Children: map[string]*bintree{}},
				"config-vsphere.yaml":     {Func: bindataPkgManifestTelemetryConfigvsphereYaml, Children: map[string]*bintree{}},
				"zz_generated.bindata.go": {Func: bindataPkgManifestTelemetryZzgeneratedBindataGo, Children: map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0o755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
