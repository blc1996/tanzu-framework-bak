#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")
#@ load("/lib/helpers.star", "get_bom_data_for_tkr_name", "get_image_repo_for_component", "ValuesFormatStr")
#@ load("tanzu-addons-manager_addon_data.lib.yaml", "tanzuaddonsmanagerdatavalues", "tanzuaddonsmanagerimageinfodatavalues")

#@ if data.values.PROVIDER_TYPE != "tkg-service-vsphere":
#@   tanzuAddonsManagerTemplatesImage = get_bom_data_for_tkr_name().components["tanzu-framework-addons"][0].images.tanzuAddonsManagerTemplatesImage
#@ end

#@ def tanzuaddonsmanagerappyaml():

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tanzu-addons-app-sa
  namespace: tkg-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tanzu-addons-app-cluster-role
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tanzu-addons-app-cluster-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tanzu-addons-app-cluster-role
subjects:
- kind: ServiceAccount
  name: tanzu-addons-app-sa
  namespace: tkg-system
---
apiVersion: kappctrl.k14s.io/v1alpha1
kind: App
metadata:
  name: tanzu-addons-manager
  namespace: tkg-system
spec:
  serviceAccountName: tanzu-addons-app-sa
  fetch:
  - image:
      url: #@ "{}/{}:{}".format(get_image_repo_for_component(tanzuAddonsManagerTemplatesImage), tanzuAddonsManagerTemplatesImage.imagePath, tanzuAddonsManagerTemplatesImage.tag)
  template:
  - ytt:
      ignoreUnknownComments: true
      inline:
        pathsFrom:
        - secretRef:
            name: tanzu-addons-manager-data-values
  deploy:
  - kapp: {}
---
apiVersion: v1
kind: Secret
metadata:
  name: tanzu-addons-manager-data-values
  namespace: tkg-system
type: Opaque
stringData:
  values.yaml: #@ ValuesFormatStr.format(yaml.encode(tanzuaddonsmanagerdatavalues()))
  imageInfo.yaml: #@ ValuesFormatStr.format(yaml.encode(tanzuaddonsmanagerimageinfodatavalues()))

#@ end
