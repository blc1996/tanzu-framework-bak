name: Plugin Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    # TODO: trigger on v1/{tkg,providers} as well
    paths:
      - 'cmd/cli/plugin/cluster/**'
      - 'cmd/cli/plugin/managementcluster/**'
      - '.github/workflows/plugin_tests.yaml'

jobs:
  build:
    name: Plugin Tests
    runs-on: tkg
    steps:
      - name: Free disk space on runner
        run: sudo rm -rf /usr/share/dotnet

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: "1.16"
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Config credentials
        env:
          GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        run: |
          git config --global url."https://git:$GH_ACCESS_TOKEN@github.com".insteadOf "https://github.com"

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Extract PR Info
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "##[set-output name=basebranch;]$(echo ${GITHUB_BASE_REF#refs/heads/})"
          echo "##[set-output name=prnum;]$(echo "$GITHUB_REF" | awk -F / '{print $3}')"
        id: extract_pr

      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: findcomment
        with:
          issue-number: ${{ steps.extract_pr.outputs.prnum }}
          body-includes: //usebom
          direction: last

      - name: Extract Alternate BOM
        shell: bash
        run: |
          export BOMCOMMENT=$(echo -e "${{ steps.findcomment.outputs.comment-body }}" | tr -d "[:space:]")
          echo "##[set-output name=bompath;]$(echo "$BOMCOMMENT" | awk -F : '{print $2}')"
          echo "##[set-output name=bomtag;]$(echo "$BOMCOMMENT" | awk -F : '{print $3}')"
        id: extract_bom

      - name: Build
        run: |
          if [[ ! -z "${{ steps.extract_bom.outputs.bompath }}" ]]; then
            export TKG_DEFAULT_BOM_IMAGE_PATH=${{ steps.extract_bom.outputs.bompath }}
          fi
          if [[ ! -z "${{ steps.extract_bom.outputs.bomtag }}" ]]; then
            export TKG_DEFAULT_BOM_IMAGE_TAG=${{ steps.extract_bom.outputs.bomtag }}
          fi
          env | sort
          make build-cli-local

      - name: Install Tanzu CLI
        run: |
          make install-cli

      - name: Install CLI plugins
        run: make install-cli-plugins

      - name: Cleanup
        run: rm -rf ~/.tanzu ~/.tkg ~/.config; docker kill $(docker ps -q) | true; docker system prune -a --volumes -f

      - name: Run cluster test plugin
        run: tanzu test plugin cluster
