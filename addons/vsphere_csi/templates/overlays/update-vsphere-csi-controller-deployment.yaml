#@ load("/values.star", "values")
#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:data", "data")

#@overlay/match by=overlay.subset({"kind": "Deployment", "metadata": {"name": "vsphere-csi-controller"}})
---
metadata:
  #@overlay/match missing_ok=True
  annotations:
    kapp.k14s.io/disable-default-label-scoping-rules: ""

spec:
  template:
    spec:
      containers:
        #@overlay/match by=overlay.subset({"name": "csi-attacher"})
        - image: #@ "{}/{}:{}".format(values.vsphereCSI.CSIAttacherImage.repository, values.vsphereCSI.CSIAttacherImage.path, values.vsphereCSI.CSIAttacherImage.tag)
          #@overlay/match missing_ok=True
          imagePullPolicy: #@ values.vsphereCSI.CSIAttacherImage.pullPolicy
          args:
          #@overlay/match by=lambda index, left, right: "--timeout=" in left, expects=1
          - #@ "--timeout=" + values.vsphereCSI.attachTimeout
        #@overlay/match by=overlay.subset({"name": "vsphere-csi-controller"})
        - image: #@ "{}/{}:{}".format(values.vsphereCSI.vsphereCSIControllerImage.repository, values.vsphereCSI.vsphereCSIControllerImage.path, values.vsphereCSI.vsphereCSIControllerImage.tag)
          #@overlay/match missing_ok=True
          imagePullPolicy: #@ values.vsphereCSI.vsphereCSIControllerImage.pullPolicy
        #@overlay/match by=overlay.subset({"name": "liveness-probe"})
        - image: #@ "{}/{}:{}".format(values.vsphereCSI.livenessProbeImage.repository, values.vsphereCSI.livenessProbeImage.path, values.vsphereCSI.livenessProbeImage.tag)
          #@overlay/match missing_ok=True
          imagePullPolicy: #@ values.vsphereCSI.livenessProbeImage.pullPolicy
        #@overlay/match by=overlay.subset({"name": "vsphere-syncer"})
        - image: #@ "{}/{}:{}".format(values.vsphereCSI.vsphereSyncerImage.repository, values.vsphereCSI.vsphereSyncerImage.path, values.vsphereCSI.vsphereSyncerImage.tag)
          #@overlay/match missing_ok=True
          imagePullPolicy: #@ values.vsphereCSI.vsphereSyncerImage.pullPolicy
        #@overlay/match by=overlay.subset({"name": "csi-provisioner"})
        - image: #@ "{}/{}:{}".format(values.vsphereCSI.CSIProvisionerImage.repository, values.vsphereCSI.CSIProvisionerImage.path, values.vsphereCSI.CSIProvisionerImage.tag)
          #@overlay/match missing_ok=True
          imagePullPolicy: #@ values.vsphereCSI.CSIProvisionerImage.pullPolicy
          args:
          #@overlay/match by=lambda index, left, right: "--timeout=" in left, expects=1
          - #@ "--timeout=" + values.vsphereCSI.provisionTimeout
        #@ if hasattr(values.vsphereCSI, 'vSphereVersion') and values.vsphereCSI.vSphereVersion.startswith('7'):
        #@overlay/append
        - name: csi-resizer
          image: #@ "{}/{}:{}".format(values.vsphereCSI.CSIResizerImage.repository, values.vsphereCSI.CSIResizerImage.path, values.vsphereCSI.CSIResizerImage.tag)
          args:
            - --v=4
            - #@ "--timeout=" + values.vsphereCSI.resizerTimeout
            - #@ "--csi-address=" + '$(ADDRESS)'
            - --leader-election
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          imagePullPolicy: #@ values.vsphereCSI.CSIResizerImage.pullPolicy
        #@ end
